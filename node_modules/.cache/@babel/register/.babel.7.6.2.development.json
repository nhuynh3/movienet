{
  "{\"sourceRoot\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"filename\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/index.js",
        "plugins": [
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _services = _interopRequireDefault(require(\"./services\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar root = _path[\"default\"].join(__dirname, '../../');\n\nvar app = (0, _express[\"default\"])();\n\n_services[\"default\"].graphql.applyMiddleware({\n  app: app\n});\n\napp.get('/', function (req, res) {\n  res.sendFile(_path[\"default\"].join(root, 'dist/client/index.html'));\n});\napp.listen(8000, function () {\n  return console.log('Listening on port 8000!');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvb3QiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsImFwcCIsInNlcnZpY2VzIiwiZ3JhcGhxbCIsImFwcGx5TWlkZGxld2FyZSIsImdldCIsInJlcSIsInJlcyIsInNlbmRGaWxlIiwibGlzdGVuIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLElBQUksR0FBR0MsaUJBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixDQUFiOztBQUNBLElBQU1DLEdBQUcsR0FBRywwQkFBWjs7QUFFQUMscUJBQVNDLE9BQVQsQ0FBaUJDLGVBQWpCLENBQWlDO0FBQUVILEVBQUFBLEdBQUcsRUFBSEE7QUFBRixDQUFqQzs7QUFFQUEsR0FBRyxDQUFDSSxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3pCQSxFQUFBQSxHQUFHLENBQUNDLFFBQUosQ0FBYVYsaUJBQUtDLElBQUwsQ0FBVUYsSUFBVixFQUFnQix3QkFBaEIsQ0FBYjtBQUNELENBRkQ7QUFHQUksR0FBRyxDQUFDUSxNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHlCQUFaLENBQU47QUFBQSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmF0aGFsaWVodXluaC9Db2RlL0ludGVydmlld3MvbW92aWVuZXQvc3JjL3NlcnZlciIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgc2VydmljZXMgZnJvbSAnLi9zZXJ2aWNlcyc7XG5cbmNvbnN0IHJvb3QgPSBwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vLi4vJyk7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbnNlcnZpY2VzLmdyYXBocWwuYXBwbHlNaWRkbGV3YXJlKHsgYXBwIH0pO1xuXG5hcHAuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gIHJlcy5zZW5kRmlsZShwYXRoLmpvaW4ocm9vdCwgJ2Rpc3QvY2xpZW50L2luZGV4Lmh0bWwnKSk7XG59KTtcbmFwcC5saXN0ZW4oODAwMCwgKCkgPT4gY29uc29sZS5sb2coJ0xpc3RlbmluZyBvbiBwb3J0IDgwMDAhJykpO1xuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "root",
        "path",
        "join",
        "__dirname",
        "app",
        "services",
        "graphql",
        "applyMiddleware",
        "get",
        "req",
        "res",
        "sendFile",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,IAAI,GAAGC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAb;;AACA,IAAMC,GAAG,GAAG,0BAAZ;;AAEAC,qBAASC,OAAT,CAAiBC,eAAjB,CAAiC;AAAEH,EAAAA,GAAG,EAAHA;AAAF,CAAjC;;AAEAA,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,QAAJ,CAAaV,iBAAKC,IAAL,CAAUF,IAAV,EAAgB,wBAAhB,CAAb;AACD,CAFD;AAGAI,GAAG,CAACQ,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,CAAjB",
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server",
      "sourcesContent": [
        "import express from 'express';\nimport path from 'path';\nimport services from './services';\n\nconst root = path.join(__dirname, '../../');\nconst app = express();\n\nservices.graphql.applyMiddleware({ app });\n\napp.get('/', (req, res) => {\n  res.sendFile(path.join(root, 'dist/client/index.html'));\n});\napp.listen(8000, () => console.log('Listening on port 8000!'));\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570493559401
  },
  "{\"sourceRoot\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"filename\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/index.js",
        "plugins": [
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _graphql = _interopRequireDefault(require(\"./graphql\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = {\n  graphql: _graphql[\"default\"]\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdyYXBocWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztlQUVlO0FBQ2JBLEVBQUFBLE9BQU8sRUFBUEE7QUFEYSxDIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uYXRoYWxpZWh1eW5oL0NvZGUvSW50ZXJ2aWV3cy9tb3ZpZW5ldC9zcmMvc2VydmVyL3NlcnZpY2VzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdyYXBocWwgZnJvbSAnLi9ncmFwaHFsJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBncmFwaHFsXG59O1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "graphql"
      ],
      "mappings": ";;;;;;;AAAA;;;;eAEe;AACbA,EAAAA,OAAO,EAAPA;AADa,C",
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services",
      "sourcesContent": [
        "import graphql from './graphql';\n\nexport default {\n  graphql\n};\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570493262054
  },
  "{\"sourceRoot\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"filename\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/index.js",
        "plugins": [
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _graphqlTools = require(\"graphql-tools\");\n\nvar _resolvers = _interopRequireDefault(require(\"./resolvers\"));\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar executableSchema = (0, _graphqlTools.makeExecutableSchema)({\n  typeDefs: _schema[\"default\"],\n  resolvers: _resolvers[\"default\"]\n});\nvar server = new _apolloServerExpress.ApolloServer({\n  schema: executableSchema,\n  context: function context(_ref) {\n    var req = _ref.req;\n    return req;\n  }\n});\nvar _default = server;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4ZWN1dGFibGVTY2hlbWEiLCJ0eXBlRGVmcyIsIlNjaGVtYSIsInJlc29sdmVycyIsIlJlc29sdmVycyIsInNlcnZlciIsIkFwb2xsb1NlcnZlciIsInNjaGVtYSIsImNvbnRleHQiLCJyZXEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLGdCQUFnQixHQUFHLHdDQUFxQjtBQUM1Q0MsRUFBQUEsUUFBUSxFQUFFQyxrQkFEa0M7QUFFNUNDLEVBQUFBLFNBQVMsRUFBRUM7QUFGaUMsQ0FBckIsQ0FBekI7QUFLQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMsaUNBQUosQ0FBaUI7QUFDOUJDLEVBQUFBLE1BQU0sRUFBRVAsZ0JBRHNCO0FBRTlCUSxFQUFBQSxPQUFPLEVBQUU7QUFBQSxRQUFHQyxHQUFILFFBQUdBLEdBQUg7QUFBQSxXQUFhQSxHQUFiO0FBQUE7QUFGcUIsQ0FBakIsQ0FBZjtlQUtlSixNIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uYXRoYWxpZWh1eW5oL0NvZGUvSW50ZXJ2aWV3cy9tb3ZpZW5ldC9zcmMvc2VydmVyL3NlcnZpY2VzL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcG9sbG9TZXJ2ZXIgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuaW1wb3J0IHsgbWFrZUV4ZWN1dGFibGVTY2hlbWEgfSBmcm9tICdncmFwaHFsLXRvb2xzJztcbmltcG9ydCBSZXNvbHZlcnMgZnJvbSAnLi9yZXNvbHZlcnMnO1xuaW1wb3J0IFNjaGVtYSBmcm9tICcuL3NjaGVtYSc7XG5cbmNvbnN0IGV4ZWN1dGFibGVTY2hlbWEgPSBtYWtlRXhlY3V0YWJsZVNjaGVtYSh7XG4gIHR5cGVEZWZzOiBTY2hlbWEsXG4gIHJlc29sdmVyczogUmVzb2x2ZXJzLFxufSk7XG5cbmNvbnN0IHNlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoe1xuICBzY2hlbWE6IGV4ZWN1dGFibGVTY2hlbWEsXG4gIGNvbnRleHQ6ICh7IHJlcSB9KSA9PiByZXEsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgc2VydmVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "executableSchema",
        "typeDefs",
        "Schema",
        "resolvers",
        "Resolvers",
        "server",
        "ApolloServer",
        "schema",
        "context",
        "req"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,gBAAgB,GAAG,wCAAqB;AAC5CC,EAAAA,QAAQ,EAAEC,kBADkC;AAE5CC,EAAAA,SAAS,EAAEC;AAFiC,CAArB,CAAzB;AAKA,IAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC9BC,EAAAA,MAAM,EAAEP,gBADsB;AAE9BQ,EAAAA,OAAO,EAAE;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,WAAaA,GAAb;AAAA;AAFqB,CAAjB,CAAf;eAKeJ,M",
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
      "sourcesContent": [
        "import { ApolloServer } from 'apollo-server-express';\nimport { makeExecutableSchema } from 'graphql-tools';\nimport Resolvers from './resolvers';\nimport Schema from './schema';\n\nconst executableSchema = makeExecutableSchema({\n  typeDefs: Schema,\n  resolvers: Resolvers,\n});\n\nconst server = new ApolloServer({\n  schema: executableSchema,\n  context: ({ req }) => req,\n});\n\nexport default server;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570494665635
  },
  "{\"sourceRoot\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"filename\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/resolvers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/resolvers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/resolvers.js",
        "plugins": [
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/resolvers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
        "sourceFileName": "resolvers.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _movies2 = _interopRequireDefault(require(\"../datastore/movies\"));\n\nvar _credits = _interopRequireDefault(require(\"../datastore/credits\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar findMovieById = function findMovieById(movieId) {\n  return _movies2[\"default\"].find(function (movie) {\n    return movie.id === movieId;\n  });\n};\n\nvar ActorMovieMap = {};\nvar CollectionMovieMap = {};\n\nvar getActors = function getActors() {\n  if (!ActorMovieMap) _generateActorMovieMap(_credits[\"default\"]);\n  return Object.values(ActorMovieMap);\n};\n\nvar findActorById = function findActorById(actorId) {\n  if (!ActorMovieMap) _generateActorMovieMap(_credits[\"default\"]);\n  return ActorMovieMap[actorId];\n}; // Creates a map of actor objects keyed by id\n\n\nvar _generateActorMovieMap = function _generateActorMovieMap(credits) {\n  credits.map(function (credit) {\n    var movie = findMovieById(credit.id);\n\n    for (actor in credit.cast) {\n      if (!ActorMovieMap[actor.id]) {\n        ActorMovieMap[actor.id] = {\n          id: id,\n          movies: [movie],\n          name: actor.name\n        };\n      } else {\n        ActorMovieMap[actor.id].movies.push(movie);\n      }\n    }\n  });\n};\n\nvar getCollections = function getCollections() {\n  if (!Object.keys(CollectionMovieMap).length) _generateCollectionsMovieMap(_movies2[\"default\"]);\n  return Object.values(CollectionMovieMap);\n};\n\nvar _generateCollectionsMovieMap = function _generateCollectionsMovieMap(movies) {\n  movies.map(function (movie) {\n    var collection = movie.belongs_to_collection;\n\n    if (collection) {\n      if (!CollectionMovieMap[collection.id]) {\n        CollectionMovieMap[collection.id] = {\n          id: collection.id,\n          name: collection.name,\n          movies: [movie]\n        };\n      } else {\n        CollectionMovieMap[collection.id].movies.push(movie);\n      }\n    }\n  });\n};\n\nvar resolvers = {\n  RootQuery: {\n    movies: function movies(root, args, context) {\n      return _movies2[\"default\"];\n    },\n    movie: function movie(root, _ref, context) {\n      var movieId = _ref.movieId;\n      return findMovieById(movieId);\n    },\n    collections: function collections(root, args, context) {\n      return getCollections();\n    },\n    actors: function actors(root, args, context) {\n      return getActors();\n    },\n    actor: function actor(root, _ref2, context) {\n      var actorId = _ref2.actorId;\n      return findActorById(actorId);\n    }\n  }\n};\nvar _default = resolvers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVycy5qcyJdLCJuYW1lcyI6WyJmaW5kTW92aWVCeUlkIiwibW92aWVJZCIsIm1vdmllcyIsImZpbmQiLCJtb3ZpZSIsImlkIiwiQWN0b3JNb3ZpZU1hcCIsIkNvbGxlY3Rpb25Nb3ZpZU1hcCIsImdldEFjdG9ycyIsIl9nZW5lcmF0ZUFjdG9yTW92aWVNYXAiLCJjcmVkaXRzIiwiT2JqZWN0IiwidmFsdWVzIiwiZmluZEFjdG9yQnlJZCIsImFjdG9ySWQiLCJtYXAiLCJjcmVkaXQiLCJhY3RvciIsImNhc3QiLCJuYW1lIiwicHVzaCIsImdldENvbGxlY3Rpb25zIiwia2V5cyIsImxlbmd0aCIsIl9nZW5lcmF0ZUNvbGxlY3Rpb25zTW92aWVNYXAiLCJjb2xsZWN0aW9uIiwiYmVsb25nc190b19jb2xsZWN0aW9uIiwicmVzb2x2ZXJzIiwiUm9vdFF1ZXJ5Iiwicm9vdCIsImFyZ3MiLCJjb250ZXh0IiwiY29sbGVjdGlvbnMiLCJhY3RvcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQ0MsT0FBRDtBQUFBLFNBQWFDLG9CQUFPQyxJQUFQLENBQVksVUFBQUMsS0FBSztBQUFBLFdBQUlBLEtBQUssQ0FBQ0MsRUFBTixLQUFhSixPQUFqQjtBQUFBLEdBQWpCLENBQWI7QUFBQSxDQUF0Qjs7QUFFQSxJQUFNSyxhQUFhLEdBQUcsRUFBdEI7QUFDQSxJQUFNQyxrQkFBa0IsR0FBRyxFQUEzQjs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsU0FBWkEsU0FBWSxHQUFNO0FBQ3BCLE1BQUksQ0FBQ0YsYUFBTCxFQUFvQkcsc0JBQXNCLENBQUNDLG1CQUFELENBQXRCO0FBQ3BCLFNBQU9DLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjTixhQUFkLENBQVA7QUFDSCxDQUhEOztBQUtBLElBQU1PLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQ0MsT0FBRCxFQUFhO0FBQy9CLE1BQUksQ0FBQ1IsYUFBTCxFQUFvQkcsc0JBQXNCLENBQUNDLG1CQUFELENBQXRCO0FBQ3BCLFNBQU9KLGFBQWEsQ0FBQ1EsT0FBRCxDQUFwQjtBQUNILENBSEQsQyxDQUtBOzs7QUFDQSxJQUFNTCxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXlCLENBQUNDLE9BQUQsRUFBYTtBQUN4Q0EsRUFBQUEsT0FBTyxDQUFDSyxHQUFSLENBQVksVUFBQ0MsTUFBRCxFQUFZO0FBQ3BCLFFBQU1aLEtBQUssR0FBR0osYUFBYSxDQUFDZ0IsTUFBTSxDQUFDWCxFQUFSLENBQTNCOztBQUNBLFNBQUtZLEtBQUwsSUFBY0QsTUFBTSxDQUFDRSxJQUFyQixFQUEyQjtBQUN2QixVQUFJLENBQUNaLGFBQWEsQ0FBQ1csS0FBSyxDQUFDWixFQUFQLENBQWxCLEVBQThCO0FBQzFCQyxRQUFBQSxhQUFhLENBQUNXLEtBQUssQ0FBQ1osRUFBUCxDQUFiLEdBQTBCO0FBQ3RCQSxVQUFBQSxFQUFFLEVBQUVBLEVBRGtCO0FBRXRCSCxVQUFBQSxNQUFNLEVBQUUsQ0FBQ0UsS0FBRCxDQUZjO0FBR3RCZSxVQUFBQSxJQUFJLEVBQUVGLEtBQUssQ0FBQ0U7QUFIVSxTQUExQjtBQUtILE9BTkQsTUFNTztBQUNIYixRQUFBQSxhQUFhLENBQUNXLEtBQUssQ0FBQ1osRUFBUCxDQUFiLENBQXdCSCxNQUF4QixDQUErQmtCLElBQS9CLENBQW9DaEIsS0FBcEM7QUFDSDtBQUNKO0FBQ0osR0FiRDtBQWNILENBZkQ7O0FBaUJBLElBQU1pQixjQUFjLEdBQUcsU0FBakJBLGNBQWlCLEdBQU07QUFDekIsTUFBSSxDQUFDVixNQUFNLENBQUNXLElBQVAsQ0FBWWYsa0JBQVosRUFBZ0NnQixNQUFyQyxFQUE2Q0MsNEJBQTRCLENBQUN0QixtQkFBRCxDQUE1QjtBQUM3QyxTQUFPUyxNQUFNLENBQUNDLE1BQVAsQ0FBY0wsa0JBQWQsQ0FBUDtBQUNILENBSEQ7O0FBSUEsSUFBTWlCLDRCQUE0QixHQUFHLFNBQS9CQSw0QkFBK0IsQ0FBQ3RCLE1BQUQsRUFBWTtBQUM3Q0EsRUFBQUEsTUFBTSxDQUFDYSxHQUFQLENBQVcsVUFBQ1gsS0FBRCxFQUFXO0FBQ2xCLFFBQU1xQixVQUFVLEdBQUdyQixLQUFLLENBQUNzQixxQkFBekI7O0FBQ0EsUUFBSUQsVUFBSixFQUFnQjtBQUNaLFVBQUksQ0FBQ2xCLGtCQUFrQixDQUFDa0IsVUFBVSxDQUFDcEIsRUFBWixDQUF2QixFQUF3QztBQUNwQ0UsUUFBQUEsa0JBQWtCLENBQUNrQixVQUFVLENBQUNwQixFQUFaLENBQWxCLEdBQW9DO0FBQ2hDQSxVQUFBQSxFQUFFLEVBQUVvQixVQUFVLENBQUNwQixFQURpQjtBQUVoQ2MsVUFBQUEsSUFBSSxFQUFFTSxVQUFVLENBQUNOLElBRmU7QUFHaENqQixVQUFBQSxNQUFNLEVBQUUsQ0FBQ0UsS0FBRDtBQUh3QixTQUFwQztBQUtILE9BTkQsTUFNTztBQUNIRyxRQUFBQSxrQkFBa0IsQ0FBQ2tCLFVBQVUsQ0FBQ3BCLEVBQVosQ0FBbEIsQ0FBa0NILE1BQWxDLENBQXlDa0IsSUFBekMsQ0FBOENoQixLQUE5QztBQUNIO0FBQ0o7QUFDSixHQWJEO0FBY0gsQ0FmRDs7QUFpQkEsSUFBTXVCLFNBQVMsR0FBRztBQUNkQyxFQUFBQSxTQUFTLEVBQUU7QUFDUDFCLElBQUFBLE1BRE8sa0JBQ0EyQixJQURBLEVBQ01DLElBRE4sRUFDWUMsT0FEWixFQUNxQjtBQUN4QixhQUFPN0IsbUJBQVA7QUFDSCxLQUhNO0FBSVBFLElBQUFBLEtBSk8saUJBSUR5QixJQUpDLFFBSWtCRSxPQUpsQixFQUkyQjtBQUFBLFVBQXBCOUIsT0FBb0IsUUFBcEJBLE9BQW9CO0FBQzlCLGFBQU9ELGFBQWEsQ0FBQ0MsT0FBRCxDQUFwQjtBQUNILEtBTk07QUFPUCtCLElBQUFBLFdBUE8sdUJBT0tILElBUEwsRUFPV0MsSUFQWCxFQU9pQkMsT0FQakIsRUFPMEI7QUFDN0IsYUFBT1YsY0FBYyxFQUFyQjtBQUNILEtBVE07QUFVUFksSUFBQUEsTUFWTyxrQkFVQUosSUFWQSxFQVVNQyxJQVZOLEVBVVlDLE9BVlosRUFVcUI7QUFDeEIsYUFBT3ZCLFNBQVMsRUFBaEI7QUFDSCxLQVpNO0FBYVBTLElBQUFBLEtBYk8saUJBYURZLElBYkMsU0Fha0JFLE9BYmxCLEVBYTJCO0FBQUEsVUFBcEJqQixPQUFvQixTQUFwQkEsT0FBb0I7QUFDOUIsYUFBT0QsYUFBYSxDQUFDQyxPQUFELENBQXBCO0FBQ0g7QUFmTTtBQURHLENBQWxCO2VBbUJlYSxTIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9uYXRoYWxpZWh1eW5oL0NvZGUvSW50ZXJ2aWV3cy9tb3ZpZW5ldC9zcmMvc2VydmVyL3NlcnZpY2VzL2dyYXBocWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW92aWVzIGZyb20gJy4uL2RhdGFzdG9yZS9tb3ZpZXMnO1xuaW1wb3J0IGNyZWRpdHMgZnJvbSAnLi4vZGF0YXN0b3JlL2NyZWRpdHMnO1xuXG5jb25zdCBmaW5kTW92aWVCeUlkID0gKG1vdmllSWQpID0+IG1vdmllcy5maW5kKG1vdmllID0+IG1vdmllLmlkID09PSBtb3ZpZUlkKTtcblxuY29uc3QgQWN0b3JNb3ZpZU1hcCA9IHt9O1xuY29uc3QgQ29sbGVjdGlvbk1vdmllTWFwID0ge307XG5jb25zdCBnZXRBY3RvcnMgPSAoKSA9PiB7XG4gICAgaWYgKCFBY3Rvck1vdmllTWFwKSBfZ2VuZXJhdGVBY3Rvck1vdmllTWFwKGNyZWRpdHMpO1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKEFjdG9yTW92aWVNYXApO1xufVxuXG5jb25zdCBmaW5kQWN0b3JCeUlkID0gKGFjdG9ySWQpID0+IHtcbiAgICBpZiAoIUFjdG9yTW92aWVNYXApIF9nZW5lcmF0ZUFjdG9yTW92aWVNYXAoY3JlZGl0cyk7XG4gICAgcmV0dXJuIEFjdG9yTW92aWVNYXBbYWN0b3JJZF07XG59XG5cbi8vIENyZWF0ZXMgYSBtYXAgb2YgYWN0b3Igb2JqZWN0cyBrZXllZCBieSBpZFxuY29uc3QgX2dlbmVyYXRlQWN0b3JNb3ZpZU1hcCA9IChjcmVkaXRzKSA9PiB7XG4gICAgY3JlZGl0cy5tYXAoKGNyZWRpdCkgPT4ge1xuICAgICAgICBjb25zdCBtb3ZpZSA9IGZpbmRNb3ZpZUJ5SWQoY3JlZGl0LmlkKVxuICAgICAgICBmb3IgKGFjdG9yIGluIGNyZWRpdC5jYXN0KSB7XG4gICAgICAgICAgICBpZiAoIUFjdG9yTW92aWVNYXBbYWN0b3IuaWRdKSB7XG4gICAgICAgICAgICAgICAgQWN0b3JNb3ZpZU1hcFthY3Rvci5pZF0gPSB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBpZCxcbiAgICAgICAgICAgICAgICAgICAgbW92aWVzOiBbbW92aWVdLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBhY3Rvci5uYW1lLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIEFjdG9yTW92aWVNYXBbYWN0b3IuaWRdLm1vdmllcy5wdXNoKG1vdmllKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pXG59XG5cbmNvbnN0IGdldENvbGxlY3Rpb25zID0gKCkgPT4ge1xuICAgIGlmICghT2JqZWN0LmtleXMoQ29sbGVjdGlvbk1vdmllTWFwKS5sZW5ndGgpIF9nZW5lcmF0ZUNvbGxlY3Rpb25zTW92aWVNYXAobW92aWVzKTtcbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhDb2xsZWN0aW9uTW92aWVNYXApO1xufVxuY29uc3QgX2dlbmVyYXRlQ29sbGVjdGlvbnNNb3ZpZU1hcCA9IChtb3ZpZXMpID0+IHtcbiAgICBtb3ZpZXMubWFwKChtb3ZpZSkgPT4ge1xuICAgICAgICBjb25zdCBjb2xsZWN0aW9uID0gbW92aWUuYmVsb25nc190b19jb2xsZWN0aW9uO1xuICAgICAgICBpZiAoY29sbGVjdGlvbikge1xuICAgICAgICAgICAgaWYgKCFDb2xsZWN0aW9uTW92aWVNYXBbY29sbGVjdGlvbi5pZF0pIHtcbiAgICAgICAgICAgICAgICBDb2xsZWN0aW9uTW92aWVNYXBbY29sbGVjdGlvbi5pZF0gPSB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBjb2xsZWN0aW9uLmlkLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBjb2xsZWN0aW9uLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIG1vdmllczogW21vdmllXSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIENvbGxlY3Rpb25Nb3ZpZU1hcFtjb2xsZWN0aW9uLmlkXS5tb3ZpZXMucHVzaChtb3ZpZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pXG59XG5cbmNvbnN0IHJlc29sdmVycyA9IHtcbiAgICBSb290UXVlcnk6IHtcbiAgICAgICAgbW92aWVzKHJvb3QsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICAgICAgICAgIHJldHVybiBtb3ZpZXM7IFxuICAgICAgICB9LCBcbiAgICAgICAgbW92aWUocm9vdCwgeyBtb3ZpZUlkIH0sIGNvbnRleHQpIHtcbiAgICAgICAgICAgIHJldHVybiBmaW5kTW92aWVCeUlkKG1vdmllSWQpO1xuICAgICAgICB9LFxuICAgICAgICBjb2xsZWN0aW9ucyhyb290LCBhcmdzLCBjb250ZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0Q29sbGVjdGlvbnMoKTtcbiAgICAgICAgfSxcbiAgICAgICAgYWN0b3JzKHJvb3QsIGFyZ3MsIGNvbnRleHQpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRBY3RvcnMoKTtcbiAgICAgICAgfSxcbiAgICAgICAgYWN0b3Iocm9vdCwgeyBhY3RvcklkIH0sIGNvbnRleHQpIHtcbiAgICAgICAgICAgIHJldHVybiBmaW5kQWN0b3JCeUlkKGFjdG9ySWQpO1xuICAgICAgICB9LFxuICAgIH0sXG59O1xuZXhwb3J0IGRlZmF1bHQgcmVzb2x2ZXJzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "resolvers.js"
      ],
      "names": [
        "findMovieById",
        "movieId",
        "movies",
        "find",
        "movie",
        "id",
        "ActorMovieMap",
        "CollectionMovieMap",
        "getActors",
        "_generateActorMovieMap",
        "credits",
        "Object",
        "values",
        "findActorById",
        "actorId",
        "map",
        "credit",
        "actor",
        "cast",
        "name",
        "push",
        "getCollections",
        "keys",
        "length",
        "_generateCollectionsMovieMap",
        "collection",
        "belongs_to_collection",
        "resolvers",
        "RootQuery",
        "root",
        "args",
        "context",
        "collections",
        "actors"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD;AAAA,SAAaC,oBAAOC,IAAP,CAAY,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,EAAN,KAAaJ,OAAjB;AAAA,GAAjB,CAAb;AAAA,CAAtB;;AAEA,IAAMK,aAAa,GAAG,EAAtB;AACA,IAAMC,kBAAkB,GAAG,EAA3B;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAI,CAACF,aAAL,EAAoBG,sBAAsB,CAACC,mBAAD,CAAtB;AACpB,SAAOC,MAAM,CAACC,MAAP,CAAcN,aAAd,CAAP;AACH,CAHD;;AAKA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AAC/B,MAAI,CAACR,aAAL,EAAoBG,sBAAsB,CAACC,mBAAD,CAAtB;AACpB,SAAOJ,aAAa,CAACQ,OAAD,CAApB;AACH,CAHD,C,CAKA;;;AACA,IAAML,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,OAAD,EAAa;AACxCA,EAAAA,OAAO,CAACK,GAAR,CAAY,UAACC,MAAD,EAAY;AACpB,QAAMZ,KAAK,GAAGJ,aAAa,CAACgB,MAAM,CAACX,EAAR,CAA3B;;AACA,SAAKY,KAAL,IAAcD,MAAM,CAACE,IAArB,EAA2B;AACvB,UAAI,CAACZ,aAAa,CAACW,KAAK,CAACZ,EAAP,CAAlB,EAA8B;AAC1BC,QAAAA,aAAa,CAACW,KAAK,CAACZ,EAAP,CAAb,GAA0B;AACtBA,UAAAA,EAAE,EAAEA,EADkB;AAEtBH,UAAAA,MAAM,EAAE,CAACE,KAAD,CAFc;AAGtBe,UAAAA,IAAI,EAAEF,KAAK,CAACE;AAHU,SAA1B;AAKH,OAND,MAMO;AACHb,QAAAA,aAAa,CAACW,KAAK,CAACZ,EAAP,CAAb,CAAwBH,MAAxB,CAA+BkB,IAA/B,CAAoChB,KAApC;AACH;AACJ;AACJ,GAbD;AAcH,CAfD;;AAiBA,IAAMiB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAI,CAACV,MAAM,CAACW,IAAP,CAAYf,kBAAZ,EAAgCgB,MAArC,EAA6CC,4BAA4B,CAACtB,mBAAD,CAA5B;AAC7C,SAAOS,MAAM,CAACC,MAAP,CAAcL,kBAAd,CAAP;AACH,CAHD;;AAIA,IAAMiB,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACtB,MAAD,EAAY;AAC7CA,EAAAA,MAAM,CAACa,GAAP,CAAW,UAACX,KAAD,EAAW;AAClB,QAAMqB,UAAU,GAAGrB,KAAK,CAACsB,qBAAzB;;AACA,QAAID,UAAJ,EAAgB;AACZ,UAAI,CAAClB,kBAAkB,CAACkB,UAAU,CAACpB,EAAZ,CAAvB,EAAwC;AACpCE,QAAAA,kBAAkB,CAACkB,UAAU,CAACpB,EAAZ,CAAlB,GAAoC;AAChCA,UAAAA,EAAE,EAAEoB,UAAU,CAACpB,EADiB;AAEhCc,UAAAA,IAAI,EAAEM,UAAU,CAACN,IAFe;AAGhCjB,UAAAA,MAAM,EAAE,CAACE,KAAD;AAHwB,SAApC;AAKH,OAND,MAMO;AACHG,QAAAA,kBAAkB,CAACkB,UAAU,CAACpB,EAAZ,CAAlB,CAAkCH,MAAlC,CAAyCkB,IAAzC,CAA8ChB,KAA9C;AACH;AACJ;AACJ,GAbD;AAcH,CAfD;;AAiBA,IAAMuB,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE;AACP1B,IAAAA,MADO,kBACA2B,IADA,EACMC,IADN,EACYC,OADZ,EACqB;AACxB,aAAO7B,mBAAP;AACH,KAHM;AAIPE,IAAAA,KAJO,iBAIDyB,IAJC,QAIkBE,OAJlB,EAI2B;AAAA,UAApB9B,OAAoB,QAApBA,OAAoB;AAC9B,aAAOD,aAAa,CAACC,OAAD,CAApB;AACH,KANM;AAOP+B,IAAAA,WAPO,uBAOKH,IAPL,EAOWC,IAPX,EAOiBC,OAPjB,EAO0B;AAC7B,aAAOV,cAAc,EAArB;AACH,KATM;AAUPY,IAAAA,MAVO,kBAUAJ,IAVA,EAUMC,IAVN,EAUYC,OAVZ,EAUqB;AACxB,aAAOvB,SAAS,EAAhB;AACH,KAZM;AAaPS,IAAAA,KAbO,iBAaDY,IAbC,SAakBE,OAblB,EAa2B;AAAA,UAApBjB,OAAoB,SAApBA,OAAoB;AAC9B,aAAOD,aAAa,CAACC,OAAD,CAApB;AACH;AAfM;AADG,CAAlB;eAmBea,S",
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
      "sourcesContent": [
        "import movies from '../datastore/movies';\nimport credits from '../datastore/credits';\n\nconst findMovieById = (movieId) => movies.find(movie => movie.id === movieId);\n\nconst ActorMovieMap = {};\nconst CollectionMovieMap = {};\nconst getActors = () => {\n    if (!ActorMovieMap) _generateActorMovieMap(credits);\n    return Object.values(ActorMovieMap);\n}\n\nconst findActorById = (actorId) => {\n    if (!ActorMovieMap) _generateActorMovieMap(credits);\n    return ActorMovieMap[actorId];\n}\n\n// Creates a map of actor objects keyed by id\nconst _generateActorMovieMap = (credits) => {\n    credits.map((credit) => {\n        const movie = findMovieById(credit.id)\n        for (actor in credit.cast) {\n            if (!ActorMovieMap[actor.id]) {\n                ActorMovieMap[actor.id] = {\n                    id: id,\n                    movies: [movie],\n                    name: actor.name,\n                };\n            } else {\n                ActorMovieMap[actor.id].movies.push(movie);\n            }\n        }\n    })\n}\n\nconst getCollections = () => {\n    if (!Object.keys(CollectionMovieMap).length) _generateCollectionsMovieMap(movies);\n    return Object.values(CollectionMovieMap);\n}\nconst _generateCollectionsMovieMap = (movies) => {\n    movies.map((movie) => {\n        const collection = movie.belongs_to_collection;\n        if (collection) {\n            if (!CollectionMovieMap[collection.id]) {\n                CollectionMovieMap[collection.id] = {\n                    id: collection.id,\n                    name: collection.name,\n                    movies: [movie],\n                }\n            } else {\n                CollectionMovieMap[collection.id].movies.push(movie)\n            }\n        }\n    })\n}\n\nconst resolvers = {\n    RootQuery: {\n        movies(root, args, context) {\n            return movies; \n        }, \n        movie(root, { movieId }, context) {\n            return findMovieById(movieId);\n        },\n        collections(root, args, context) {\n            return getCollections();\n        },\n        actors(root, args, context) {\n            return getActors();\n        },\n        actor(root, { actorId }, context) {\n            return findActorById(actorId);\n        },\n    },\n};\nexport default resolvers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570744596056
  },
  "{\"sourceRoot\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"filename\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/schema.js",
        "plugins": [
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar typeDefinitions = \"\\n  type Movie {\\n    id: Int\\n    title: String\\n    budget: Int\\n    vote_average: Float\\n  }\\n  type Collection {\\n    id: Int\\n    name: String\\n    movies: [Movie]\\n  }\\n  type Genre {\\n    id: Int\\n    name: String\\n  }\\n  type Actor {\\n    id: Int\\n    name: String\\n    movies: [Movie]\\n  }\\n  type RootQuery {\\n    movies: [Movie],\\n    movie(movieId: Int): Movie,\\n    actors: [Actor],\\n    actor(actorId: Int): Actor,\\n    collections: [Collection],\\n  }\\n  schema {\\n    query: RootQuery\\n  }\\n\";\nvar _default = [typeDefinitions];\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJ0eXBlRGVmaW5pdGlvbnMiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU1BLGVBQWUsK2ZBQXJCO2VBaUNlLENBQUNBLGVBQUQsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmF0aGFsaWVodXluaC9Db2RlL0ludGVydmlld3MvbW92aWVuZXQvc3JjL3NlcnZlci9zZXJ2aWNlcy9ncmFwaHFsIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdHlwZURlZmluaXRpb25zID0gYFxuICB0eXBlIE1vdmllIHtcbiAgICBpZDogSW50XG4gICAgdGl0bGU6IFN0cmluZ1xuICAgIGJ1ZGdldDogSW50XG4gICAgdm90ZV9hdmVyYWdlOiBGbG9hdFxuICB9XG4gIHR5cGUgQ29sbGVjdGlvbiB7XG4gICAgaWQ6IEludFxuICAgIG5hbWU6IFN0cmluZ1xuICAgIG1vdmllczogW01vdmllXVxuICB9XG4gIHR5cGUgR2VucmUge1xuICAgIGlkOiBJbnRcbiAgICBuYW1lOiBTdHJpbmdcbiAgfVxuICB0eXBlIEFjdG9yIHtcbiAgICBpZDogSW50XG4gICAgbmFtZTogU3RyaW5nXG4gICAgbW92aWVzOiBbTW92aWVdXG4gIH1cbiAgdHlwZSBSb290UXVlcnkge1xuICAgIG1vdmllczogW01vdmllXSxcbiAgICBtb3ZpZShtb3ZpZUlkOiBJbnQpOiBNb3ZpZSxcbiAgICBhY3RvcnM6IFtBY3Rvcl0sXG4gICAgYWN0b3IoYWN0b3JJZDogSW50KTogQWN0b3IsXG4gICAgY29sbGVjdGlvbnM6IFtDb2xsZWN0aW9uXSxcbiAgfVxuICBzY2hlbWEge1xuICAgIHF1ZXJ5OiBSb290UXVlcnlcbiAgfVxuYDtcblxuZXhwb3J0IGRlZmF1bHQgW3R5cGVEZWZpbml0aW9uc107XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "typeDefinitions"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,eAAe,+fAArB;eAiCe,CAACA,eAAD,C",
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/graphql",
      "sourcesContent": [
        "const typeDefinitions = `\n  type Movie {\n    id: Int\n    title: String\n    budget: Int\n    vote_average: Float\n  }\n  type Collection {\n    id: Int\n    name: String\n    movies: [Movie]\n  }\n  type Genre {\n    id: Int\n    name: String\n  }\n  type Actor {\n    id: Int\n    name: String\n    movies: [Movie]\n  }\n  type RootQuery {\n    movies: [Movie],\n    movie(movieId: Int): Movie,\n    actors: [Actor],\n    actor(actorId: Int): Actor,\n    collections: [Collection],\n  }\n  schema {\n    query: RootQuery\n  }\n`;\n\nexport default [typeDefinitions];\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570744048053
  },
  "{\"sourceRoot\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"filename\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore/movies.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore/movies.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore/movies.js",
        "plugins": [
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore/movies.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore",
        "sourceFileName": "movies.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// extracted and reduced data for development\nvar movies = [{\n  id: 862,\n  belongs_to_collection: {\n    id: 10194,\n    name: 'Toy Story Collection'\n  },\n  budget: 30000000,\n  title: \"Toy Story\",\n  vote_average: 7.7,\n  genres: [{\n    'id': 16,\n    'name': 'Animation'\n  }, {\n    'id': 35,\n    'name': 'Comedy'\n  }, {\n    'id': 10751,\n    'name': 'Family'\n  }] //   original_language: \"en\",\n  //   original_title: \"Toy Story\",\n  //   overview: \"Led by Woody, Andy's toys live happily in his room until Andy's birthday brings Buzz Lightyear onto the scene. Afraid of losing his place in Andy's heart, Woody plots against Buzz. But when circumstances separate Buzz and Woody from their owner, the duo eventually learns to put aside their differences.\",\n  //   popularity: 21.946943,\n  //   release_date: \"1995-10-30\",\n  //   revenue: 373554033,\n  //   runtime: 81,\n  //   status: \"Released\",\n  //   vote_count: 5415,\n\n}, {\n  id: 9946,\n  belongs_to_collection: \"\",\n  budget: 100000000,\n  title: \"End of Days\",\n  vote_average: 5.5,\n  genres: [{\n    'id': 28,\n    'name': 'Action'\n  }, {\n    'id': 14,\n    'name': 'Fantasy'\n  }, {\n    'id': 27,\n    'name': 'Horror'\n  }, {\n    'id': 9648,\n    'name': 'Mystery'\n  }] // original_language: \"en\",\n  // original_title: \"End of Days\",\n  // overview: \"On December 28th, 1999, the citizens of New York City are getting ready for the turn of the millennium. However, the Devil decides to crash the party by coming to the city, inhabiting a man's body, and searching for his chosen bride, a 20-year-old woman named Christine York. The world will end, and the only hope lies within an atheist called Jericho Cane.\",\n  // popularity: 9.62371,\n  // release_date: \"1999-11-24\",\n  // revenue: 211989043,\n  // runtime: 121,\n  // status: \"Released\",\n  // vote_count: 488,\n\n}, {\n  id: 863,\n  belongs_to_collection: {\n    id: 10194,\n    name: 'Toy Story Collection'\n  },\n  budget: 90000000,\n  title: \"Toy Story 2\",\n  vote_average: 7.3,\n  genres: [{\n    'id': 16,\n    'name': 'Animation'\n  }, {\n    'id': 35,\n    'name': 'Comedy'\n  }, {\n    'id': 10751,\n    'name': 'Family'\n  }] // original_language: \"en\",\n  // original_title: \"Toy Story 2\",\n  // overview: \"Andy heads off to Cowboy Camp, leaving his toys to their own devices. Things shift into high gear when an obsessive toy collector named Al McWhiggen, owner of Al's Toy Barn kidnaps Woody. Andy's toys mount a daring rescue mission, Buzz Lightyear meets his match and Woody has to decide where he and his heart truly belong.\",\n  // popularity: 17.547693,\n  // release_date: \"1999-10-30\",\n  // revenue: 497366869,\n  // runtime: 92,\n  // status: \"Released\",\n  // vote_count: 3914,\n\n}];\nvar _default = movies;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vdmllcy5qcyJdLCJuYW1lcyI6WyJtb3ZpZXMiLCJpZCIsImJlbG9uZ3NfdG9fY29sbGVjdGlvbiIsIm5hbWUiLCJidWRnZXQiLCJ0aXRsZSIsInZvdGVfYXZlcmFnZSIsImdlbnJlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFFQSxJQUFNQSxNQUFNLEdBQUcsQ0FDWDtBQUNJQyxFQUFBQSxFQUFFLEVBQUUsR0FEUjtBQUVJQyxFQUFBQSxxQkFBcUIsRUFBRTtBQUNuQkQsSUFBQUEsRUFBRSxFQUFFLEtBRGU7QUFFbkJFLElBQUFBLElBQUksRUFBRTtBQUZhLEdBRjNCO0FBTUlDLEVBQUFBLE1BQU0sRUFBRSxRQU5aO0FBT0lDLEVBQUFBLEtBQUssRUFBRSxXQVBYO0FBUUlDLEVBQUFBLFlBQVksRUFBRSxHQVJsQjtBQVNJQyxFQUFBQSxNQUFNLEVBQUUsQ0FBQztBQUFDLFVBQU0sRUFBUDtBQUFXLFlBQVE7QUFBbkIsR0FBRCxFQUFrQztBQUFDLFVBQU0sRUFBUDtBQUFXLFlBQVE7QUFBbkIsR0FBbEMsRUFBZ0U7QUFBQyxVQUFNLEtBQVA7QUFBYyxZQUFRO0FBQXRCLEdBQWhFLENBVFosQ0FVSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBbEJKLENBRFcsRUFxQlg7QUFDSU4sRUFBQUEsRUFBRSxFQUFFLElBRFI7QUFFSUMsRUFBQUEscUJBQXFCLEVBQUUsRUFGM0I7QUFHSUUsRUFBQUEsTUFBTSxFQUFFLFNBSFo7QUFJSUMsRUFBQUEsS0FBSyxFQUFFLGFBSlg7QUFLSUMsRUFBQUEsWUFBWSxFQUFFLEdBTGxCO0FBTUlDLEVBQUFBLE1BQU0sRUFBRSxDQUFDO0FBQUMsVUFBTSxFQUFQO0FBQVcsWUFBUTtBQUFuQixHQUFELEVBQStCO0FBQUMsVUFBTSxFQUFQO0FBQVcsWUFBUTtBQUFuQixHQUEvQixFQUE4RDtBQUFDLFVBQU0sRUFBUDtBQUFXLFlBQVE7QUFBbkIsR0FBOUQsRUFBNEY7QUFBQyxVQUFNLElBQVA7QUFBYSxZQUFRO0FBQXJCLEdBQTVGLENBTlosQ0FPSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBZkosQ0FyQlcsRUFzQ1g7QUFDSU4sRUFBQUEsRUFBRSxFQUFFLEdBRFI7QUFFSUMsRUFBQUEscUJBQXFCLEVBQUU7QUFBQ0QsSUFBQUEsRUFBRSxFQUFFLEtBQUw7QUFBWUUsSUFBQUEsSUFBSSxFQUFFO0FBQWxCLEdBRjNCO0FBR0lDLEVBQUFBLE1BQU0sRUFBRSxRQUhaO0FBSUlDLEVBQUFBLEtBQUssRUFBRSxhQUpYO0FBS0lDLEVBQUFBLFlBQVksRUFBRSxHQUxsQjtBQU1JQyxFQUFBQSxNQUFNLEVBQUUsQ0FBQztBQUFDLFVBQU0sRUFBUDtBQUFXLFlBQVE7QUFBbkIsR0FBRCxFQUFrQztBQUFDLFVBQU0sRUFBUDtBQUFXLFlBQVE7QUFBbkIsR0FBbEMsRUFBZ0U7QUFBQyxVQUFNLEtBQVA7QUFBYyxZQUFRO0FBQXRCLEdBQWhFLENBTlosQ0FPSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBZkosQ0F0Q1csQ0FBZjtlQXlEZVAsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmF0aGFsaWVodXluaC9Db2RlL0ludGVydmlld3MvbW92aWVuZXQvc3JjL3NlcnZlci9zZXJ2aWNlcy9kYXRhc3RvcmUiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYW5kIHJlZHVjZWQgZGF0YSBmb3IgZGV2ZWxvcG1lbnRcblxuY29uc3QgbW92aWVzID0gW1xuICAgIHtcbiAgICAgICAgaWQ6IDg2MixcbiAgICAgICAgYmVsb25nc190b19jb2xsZWN0aW9uOiB7XG4gICAgICAgICAgICBpZDogMTAxOTQsXG4gICAgICAgICAgICBuYW1lOiAnVG95IFN0b3J5IENvbGxlY3Rpb24nXG4gICAgICAgIH0sXG4gICAgICAgIGJ1ZGdldDogMzAwMDAwMDAsXG4gICAgICAgIHRpdGxlOiBcIlRveSBTdG9yeVwiLFxuICAgICAgICB2b3RlX2F2ZXJhZ2U6IDcuNyxcbiAgICAgICAgZ2VucmVzOiBbeydpZCc6IDE2LCAnbmFtZSc6ICdBbmltYXRpb24nfSwgeydpZCc6IDM1LCAnbmFtZSc6ICdDb21lZHknfSwgeydpZCc6IDEwNzUxLCAnbmFtZSc6ICdGYW1pbHknfV0sXG4gICAgICAgIC8vICAgb3JpZ2luYWxfbGFuZ3VhZ2U6IFwiZW5cIixcbiAgICAgICAgLy8gICBvcmlnaW5hbF90aXRsZTogXCJUb3kgU3RvcnlcIixcbiAgICAgICAgLy8gICBvdmVydmlldzogXCJMZWQgYnkgV29vZHksIEFuZHkncyB0b3lzIGxpdmUgaGFwcGlseSBpbiBoaXMgcm9vbSB1bnRpbCBBbmR5J3MgYmlydGhkYXkgYnJpbmdzIEJ1enogTGlnaHR5ZWFyIG9udG8gdGhlIHNjZW5lLiBBZnJhaWQgb2YgbG9zaW5nIGhpcyBwbGFjZSBpbiBBbmR5J3MgaGVhcnQsIFdvb2R5IHBsb3RzIGFnYWluc3QgQnV6ei4gQnV0IHdoZW4gY2lyY3Vtc3RhbmNlcyBzZXBhcmF0ZSBCdXp6IGFuZCBXb29keSBmcm9tIHRoZWlyIG93bmVyLCB0aGUgZHVvIGV2ZW50dWFsbHkgbGVhcm5zIHRvIHB1dCBhc2lkZSB0aGVpciBkaWZmZXJlbmNlcy5cIixcbiAgICAgICAgLy8gICBwb3B1bGFyaXR5OiAyMS45NDY5NDMsXG4gICAgICAgIC8vICAgcmVsZWFzZV9kYXRlOiBcIjE5OTUtMTAtMzBcIixcbiAgICAgICAgLy8gICByZXZlbnVlOiAzNzM1NTQwMzMsXG4gICAgICAgIC8vICAgcnVudGltZTogODEsXG4gICAgICAgIC8vICAgc3RhdHVzOiBcIlJlbGVhc2VkXCIsXG4gICAgICAgIC8vICAgdm90ZV9jb3VudDogNTQxNSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IDk5NDYsXG4gICAgICAgIGJlbG9uZ3NfdG9fY29sbGVjdGlvbjogXCJcIixcbiAgICAgICAgYnVkZ2V0OiAxMDAwMDAwMDAsXG4gICAgICAgIHRpdGxlOiBcIkVuZCBvZiBEYXlzXCIsXG4gICAgICAgIHZvdGVfYXZlcmFnZTogNS41LFxuICAgICAgICBnZW5yZXM6IFt7J2lkJzogMjgsICduYW1lJzogJ0FjdGlvbid9LCB7J2lkJzogMTQsICduYW1lJzogJ0ZhbnRhc3knfSwgeydpZCc6IDI3LCAnbmFtZSc6ICdIb3Jyb3InfSwgeydpZCc6IDk2NDgsICduYW1lJzogJ015c3RlcnknfV0sXG4gICAgICAgIC8vIG9yaWdpbmFsX2xhbmd1YWdlOiBcImVuXCIsXG4gICAgICAgIC8vIG9yaWdpbmFsX3RpdGxlOiBcIkVuZCBvZiBEYXlzXCIsXG4gICAgICAgIC8vIG92ZXJ2aWV3OiBcIk9uIERlY2VtYmVyIDI4dGgsIDE5OTksIHRoZSBjaXRpemVucyBvZiBOZXcgWW9yayBDaXR5IGFyZSBnZXR0aW5nIHJlYWR5IGZvciB0aGUgdHVybiBvZiB0aGUgbWlsbGVubml1bS4gSG93ZXZlciwgdGhlIERldmlsIGRlY2lkZXMgdG8gY3Jhc2ggdGhlIHBhcnR5IGJ5IGNvbWluZyB0byB0aGUgY2l0eSwgaW5oYWJpdGluZyBhIG1hbidzIGJvZHksIGFuZCBzZWFyY2hpbmcgZm9yIGhpcyBjaG9zZW4gYnJpZGUsIGEgMjAteWVhci1vbGQgd29tYW4gbmFtZWQgQ2hyaXN0aW5lIFlvcmsuIFRoZSB3b3JsZCB3aWxsIGVuZCwgYW5kIHRoZSBvbmx5IGhvcGUgbGllcyB3aXRoaW4gYW4gYXRoZWlzdCBjYWxsZWQgSmVyaWNobyBDYW5lLlwiLFxuICAgICAgICAvLyBwb3B1bGFyaXR5OiA5LjYyMzcxLFxuICAgICAgICAvLyByZWxlYXNlX2RhdGU6IFwiMTk5OS0xMS0yNFwiLFxuICAgICAgICAvLyByZXZlbnVlOiAyMTE5ODkwNDMsXG4gICAgICAgIC8vIHJ1bnRpbWU6IDEyMSxcbiAgICAgICAgLy8gc3RhdHVzOiBcIlJlbGVhc2VkXCIsXG4gICAgICAgIC8vIHZvdGVfY291bnQ6IDQ4OCxcbiAgICB9LFxuICAgIHtcbiAgICAgICAgaWQ6IDg2MyxcbiAgICAgICAgYmVsb25nc190b19jb2xsZWN0aW9uOiB7aWQ6IDEwMTk0LCBuYW1lOiAnVG95IFN0b3J5IENvbGxlY3Rpb24nfSxcbiAgICAgICAgYnVkZ2V0OiA5MDAwMDAwMCxcbiAgICAgICAgdGl0bGU6IFwiVG95IFN0b3J5IDJcIixcbiAgICAgICAgdm90ZV9hdmVyYWdlOiA3LjMsXG4gICAgICAgIGdlbnJlczogW3snaWQnOiAxNiwgJ25hbWUnOiAnQW5pbWF0aW9uJ30sIHsnaWQnOiAzNSwgJ25hbWUnOiAnQ29tZWR5J30sIHsnaWQnOiAxMDc1MSwgJ25hbWUnOiAnRmFtaWx5J31dLFxuICAgICAgICAvLyBvcmlnaW5hbF9sYW5ndWFnZTogXCJlblwiLFxuICAgICAgICAvLyBvcmlnaW5hbF90aXRsZTogXCJUb3kgU3RvcnkgMlwiLFxuICAgICAgICAvLyBvdmVydmlldzogXCJBbmR5IGhlYWRzIG9mZiB0byBDb3dib3kgQ2FtcCwgbGVhdmluZyBoaXMgdG95cyB0byB0aGVpciBvd24gZGV2aWNlcy4gVGhpbmdzIHNoaWZ0IGludG8gaGlnaCBnZWFyIHdoZW4gYW4gb2JzZXNzaXZlIHRveSBjb2xsZWN0b3IgbmFtZWQgQWwgTWNXaGlnZ2VuLCBvd25lciBvZiBBbCdzIFRveSBCYXJuIGtpZG5hcHMgV29vZHkuIEFuZHkncyB0b3lzIG1vdW50IGEgZGFyaW5nIHJlc2N1ZSBtaXNzaW9uLCBCdXp6IExpZ2h0eWVhciBtZWV0cyBoaXMgbWF0Y2ggYW5kIFdvb2R5IGhhcyB0byBkZWNpZGUgd2hlcmUgaGUgYW5kIGhpcyBoZWFydCB0cnVseSBiZWxvbmcuXCIsXG4gICAgICAgIC8vIHBvcHVsYXJpdHk6IDE3LjU0NzY5MyxcbiAgICAgICAgLy8gcmVsZWFzZV9kYXRlOiBcIjE5OTktMTAtMzBcIixcbiAgICAgICAgLy8gcmV2ZW51ZTogNDk3MzY2ODY5LFxuICAgICAgICAvLyBydW50aW1lOiA5MixcbiAgICAgICAgLy8gc3RhdHVzOiBcIlJlbGVhc2VkXCIsXG4gICAgICAgIC8vIHZvdGVfY291bnQ6IDM5MTQsXG4gICAgfVxuXTtcblxuZXhwb3J0IGRlZmF1bHQgbW92aWVzOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "movies.js"
      ],
      "names": [
        "movies",
        "id",
        "belongs_to_collection",
        "name",
        "budget",
        "title",
        "vote_average",
        "genres"
      ],
      "mappings": ";;;;;;AAAA;AAEA,IAAMA,MAAM,GAAG,CACX;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,qBAAqB,EAAE;AACnBD,IAAAA,EAAE,EAAE,KADe;AAEnBE,IAAAA,IAAI,EAAE;AAFa,GAF3B;AAMIC,EAAAA,MAAM,EAAE,QANZ;AAOIC,EAAAA,KAAK,EAAE,WAPX;AAQIC,EAAAA,YAAY,EAAE,GARlB;AASIC,EAAAA,MAAM,EAAE,CAAC;AAAC,UAAM,EAAP;AAAW,YAAQ;AAAnB,GAAD,EAAkC;AAAC,UAAM,EAAP;AAAW,YAAQ;AAAnB,GAAlC,EAAgE;AAAC,UAAM,KAAP;AAAc,YAAQ;AAAtB,GAAhE,CATZ,CAUI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBJ,CADW,EAqBX;AACIN,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,qBAAqB,EAAE,EAF3B;AAGIE,EAAAA,MAAM,EAAE,SAHZ;AAIIC,EAAAA,KAAK,EAAE,aAJX;AAKIC,EAAAA,YAAY,EAAE,GALlB;AAMIC,EAAAA,MAAM,EAAE,CAAC;AAAC,UAAM,EAAP;AAAW,YAAQ;AAAnB,GAAD,EAA+B;AAAC,UAAM,EAAP;AAAW,YAAQ;AAAnB,GAA/B,EAA8D;AAAC,UAAM,EAAP;AAAW,YAAQ;AAAnB,GAA9D,EAA4F;AAAC,UAAM,IAAP;AAAa,YAAQ;AAArB,GAA5F,CANZ,CAOI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfJ,CArBW,EAsCX;AACIN,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,qBAAqB,EAAE;AAACD,IAAAA,EAAE,EAAE,KAAL;AAAYE,IAAAA,IAAI,EAAE;AAAlB,GAF3B;AAGIC,EAAAA,MAAM,EAAE,QAHZ;AAIIC,EAAAA,KAAK,EAAE,aAJX;AAKIC,EAAAA,YAAY,EAAE,GALlB;AAMIC,EAAAA,MAAM,EAAE,CAAC;AAAC,UAAM,EAAP;AAAW,YAAQ;AAAnB,GAAD,EAAkC;AAAC,UAAM,EAAP;AAAW,YAAQ;AAAnB,GAAlC,EAAgE;AAAC,UAAM,KAAP;AAAc,YAAQ;AAAtB,GAAhE,CANZ,CAOI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfJ,CAtCW,CAAf;eAyDeP,M",
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore",
      "sourcesContent": [
        "// extracted and reduced data for development\n\nconst movies = [\n    {\n        id: 862,\n        belongs_to_collection: {\n            id: 10194,\n            name: 'Toy Story Collection'\n        },\n        budget: 30000000,\n        title: \"Toy Story\",\n        vote_average: 7.7,\n        genres: [{'id': 16, 'name': 'Animation'}, {'id': 35, 'name': 'Comedy'}, {'id': 10751, 'name': 'Family'}],\n        //   original_language: \"en\",\n        //   original_title: \"Toy Story\",\n        //   overview: \"Led by Woody, Andy's toys live happily in his room until Andy's birthday brings Buzz Lightyear onto the scene. Afraid of losing his place in Andy's heart, Woody plots against Buzz. But when circumstances separate Buzz and Woody from their owner, the duo eventually learns to put aside their differences.\",\n        //   popularity: 21.946943,\n        //   release_date: \"1995-10-30\",\n        //   revenue: 373554033,\n        //   runtime: 81,\n        //   status: \"Released\",\n        //   vote_count: 5415,\n    },\n    {\n        id: 9946,\n        belongs_to_collection: \"\",\n        budget: 100000000,\n        title: \"End of Days\",\n        vote_average: 5.5,\n        genres: [{'id': 28, 'name': 'Action'}, {'id': 14, 'name': 'Fantasy'}, {'id': 27, 'name': 'Horror'}, {'id': 9648, 'name': 'Mystery'}],\n        // original_language: \"en\",\n        // original_title: \"End of Days\",\n        // overview: \"On December 28th, 1999, the citizens of New York City are getting ready for the turn of the millennium. However, the Devil decides to crash the party by coming to the city, inhabiting a man's body, and searching for his chosen bride, a 20-year-old woman named Christine York. The world will end, and the only hope lies within an atheist called Jericho Cane.\",\n        // popularity: 9.62371,\n        // release_date: \"1999-11-24\",\n        // revenue: 211989043,\n        // runtime: 121,\n        // status: \"Released\",\n        // vote_count: 488,\n    },\n    {\n        id: 863,\n        belongs_to_collection: {id: 10194, name: 'Toy Story Collection'},\n        budget: 90000000,\n        title: \"Toy Story 2\",\n        vote_average: 7.3,\n        genres: [{'id': 16, 'name': 'Animation'}, {'id': 35, 'name': 'Comedy'}, {'id': 10751, 'name': 'Family'}],\n        // original_language: \"en\",\n        // original_title: \"Toy Story 2\",\n        // overview: \"Andy heads off to Cowboy Camp, leaving his toys to their own devices. Things shift into high gear when an obsessive toy collector named Al McWhiggen, owner of Al's Toy Barn kidnaps Woody. Andy's toys mount a daring rescue mission, Buzz Lightyear meets his match and Woody has to decide where he and his heart truly belong.\",\n        // popularity: 17.547693,\n        // release_date: \"1999-10-30\",\n        // revenue: 497366869,\n        // runtime: 92,\n        // status: \"Released\",\n        // vote_count: 3914,\n    }\n];\n\nexport default movies;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570744569120
  },
  "{\"sourceRoot\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"filename\":\"/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore/credits.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/nathaliehuynh/Code/Interviews/movienet\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-function-sent\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"MetaProperty\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-throw-expressions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"UnaryExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-react-jsx\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"JSXNamespacedName\":{\"enter\":[null]},\"JSXSpreadChild\":{\"enter\":[null]},\"JSXElement\":{\"exit\":[null]},\"JSXFragment\":{\"exit\":[null]},\"Program\":{\"enter\":[null],\"exit\":[null]},\"JSXAttribute\":{\"enter\":[null]}},\"options\":{\"pragma\":\"React.createElement\",\"pragmaFrag\":\"React.Fragment\",\"throwIfNamespace\":true,\"useBuiltIns\":false}},{\"key\":\"transform-react-display-name\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore/credits.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/nathaliehuynh/Code/Interviews/movienet",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-function-sent",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "MetaProperty": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-throw-expressions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "UnaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-react-jsx",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "JSXNamespacedName": {
              "enter": [
                null
              ]
            },
            "JSXSpreadChild": {
              "enter": [
                null
              ]
            },
            "JSXElement": {
              "exit": [
                null
              ]
            },
            "JSXFragment": {
              "exit": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "JSXAttribute": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "pragma": "React.createElement",
            "pragmaFrag": "React.Fragment",
            "throwIfNamespace": true,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-react-display-name",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore/credits.js",
        "plugins": [
          "decorators-legacy",
          "functionSent",
          "exportNamespaceFrom",
          "numericSeparator",
          "throwExpressions",
          "classProperties",
          "classPrivateProperties",
          "jsx",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore/credits.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore",
        "sourceFileName": "credits.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n// extracted and reduced data for development\nvar credits = [{\n  cast: [{\n    'character': 'Woody (voice)',\n    'id': 31,\n    'name': 'Tom Hanks',\n    'order': 0\n  }, {\n    'character': 'Buzz Lightyear (voice)',\n    'id': 12898,\n    'name': 'Tim Allen',\n    'order': 1\n  }, {\n    'character': 'Mr. Potato Head (voice)',\n    'id': 7167,\n    'name': 'Don Rickles',\n    'order': 2\n  }, {\n    'character': 'Slinky Dog (voice)',\n    'id': 12899,\n    'name': 'Jim Varney',\n    'order': 3\n  }, {\n    'character': 'Rex (voice)',\n    'id': 12900,\n    'name': 'Wallace Shawn',\n    'order': 4\n  }, {\n    'character': 'Hamm (voice)',\n    'id': 7907,\n    'name': 'John Ratzenberger',\n    'order': 5\n  }, {\n    'character': 'Bo Peep (voice)',\n    'id': 8873,\n    'name': 'Annie Potts',\n    'order': 6\n  }, {\n    'character': 'Andy (voice)',\n    'id': 1116442,\n    'name': 'John Morris',\n    'order': 7\n  }, {\n    'character': 'Sid (voice)',\n    'id': 12901,\n    'name': 'Erik von Detten',\n    'order': 8\n  }, {\n    'character': 'Mrs. Davis (voice)',\n    'id': 12133,\n    'name': 'Laurie Metcalf',\n    'order': 9\n  }, {\n    'character': 'Sergeant (voice)',\n    'id': 8655,\n    'name': 'R. Lee Ermey',\n    'order': 10\n  }, {\n    'character': 'Hannah (voice)',\n    'id': 12903,\n    'name': 'Sarah Freeman',\n    'order': 11\n  }, {\n    'character': 'TV Announcer (voice)',\n    'id': 37221,\n    'name': 'Penn Jillette',\n    'order': 12\n  }],\n  id: 862\n}, {\n  cast: [{\n    'character': 'Jericho Cane',\n    'id': 1100,\n    'name': 'Arnold Schwarzenegger',\n    'order': 0\n  }, {\n    'character': 'Satan',\n    'id': 5168,\n    'name': 'Gabriel Byrne',\n    'order': 1\n  }, {\n    'character': 'Bobby Chicago',\n    'id': 7166,\n    'name': 'Kevin Pollak',\n    'order': 2\n  }, {\n    'character': 'Christine York',\n    'id': 17346,\n    'name': 'Robin Tunney',\n    'order': 3\n  }, {\n    'character': 'Detective Margie Francis',\n    'id': 30485,\n    'name': 'CCH Pounder',\n    'order': 4\n  }, {\n    'character': 'Father Kovak',\n    'id': 522,\n    'name': 'Rod Steiger',\n    'order': 5\n  }, {\n    'character': 'Thomas Aquinas',\n    'id': 14325,\n    'name': \"Derrick O'Connor\",\n    'order': 6\n  }, {\n    'character': 'Mabel',\n    'id': 6199,\n    'name': 'Miriam Margolyes',\n    'order': 7\n  }, {\n    'character': 'Head Priest',\n    'id': 1646,\n    'name': 'Udo Kier',\n    'order': 8\n  }, {\n    'character': 'Pope',\n    'id': 1173,\n    'name': 'Mark Margolis',\n    'order': 9\n  }, {\n    'character': 'Skateboarder',\n    'id': 1570367,\n    'name': 'Jonny Bogris',\n    'order': 10\n  }, {\n    'character': 'Albino',\n    'id': 215304,\n    'name': 'Victor Varnado',\n    'order': 11\n  }, {\n    'character': 'Cardinal',\n    'id': 53490,\n    'name': \"Michael O'Hagan\",\n    'order': 12\n  }],\n  id: 9946\n}, {\n  cast: [{\n    'character': 'Woody (voice)',\n    'id': 31,\n    'name': 'Tom Hanks',\n    'order': 0\n  }, {\n    'character': 'Buzz Lightyear (voice)',\n    'id': 12898,\n    'name': 'Tim Allen',\n    'order': 1\n  }, {\n    'character': 'Jessie (voice)',\n    'id': 3234,\n    'name': 'Joan Cusack',\n    'order': 2\n  }, {\n    'character': 'Prospector (voice)',\n    'id': 7090,\n    'name': 'Kelsey Grammer',\n    'order': 3\n  }, {\n    'character': 'Mr. Potato Head (voice)',\n    'id': 7167,\n    'name': 'Don Rickles',\n    'order': 4\n  }, {\n    'character': 'Slinky Dog (voice)',\n    'id': 12899,\n    'name': 'Jim Varney',\n    'order': 5\n  }, {\n    'character': 'Rex (voice)',\n    'id': 12900,\n    'name': 'Wallace Shawn',\n    'order': 6\n  }, {\n    'character': 'Hamm (voice)',\n    'id': 7907,\n    'name': 'John Ratzenberger',\n    'order': 7\n  }, {\n    'character': 'Bo Peep (voice)',\n    'id': 8873,\n    'name': 'Annie Potts',\n    'order': 8\n  }, {\n    'character': 'Al McWhiggin (voice)',\n    'id': 4201,\n    'name': 'Wayne Knight',\n    'order': 9\n  }, {\n    'character': 'Andy (voice)',\n    'id': 1116442,\n    'name': 'John Morris',\n    'order': 10\n  }, {\n    'character': \"Andy's Mom (voice)\",\n    'id': 12133,\n    'name': 'Laurie Metcalf',\n    'order': 11\n  }, {\n    'character': 'Mrs. Potato Head (voice)',\n    'id': 61964,\n    'name': 'Estelle Harris',\n    'order': 12\n  }, {\n    'character': 'Sarge (voice)',\n    'id': 8655,\n    'name': 'R. Lee Ermey',\n    'order': 13\n  }, {\n    'character': 'Barbie (voice)',\n    'id': 63978,\n    'name': 'Jodi Benson',\n    'order': 14\n  }, {\n    'character': 'The Cleaner (voice)',\n    'id': 123037,\n    'name': 'Jonathan Harris',\n    'order': 15\n  }, {\n    'character': 'Wheezy (voice)',\n    'id': 7911,\n    'name': 'Joe Ranft',\n    'order': 16\n  }, {\n    'character': 'Emperor Zurg (voice)',\n    'id': 7,\n    'name': 'Andrew Stanton',\n    'order': 17\n  }, {\n    'character': 'Aliens (voice)',\n    'id': 7882,\n    'name': 'Jeff Pidgeon',\n    'order': 18\n  }, {\n    'character': \"Woody's Roundup Announcer (voice)\",\n    'id': 35219,\n    'name': 'Corey Burton',\n    'order': 19\n  }, {\n    'character': \"Blue Rock 'Em Sock 'Em Robot (voice)\",\n    'id': 7879,\n    'name': 'John Lasseter',\n    'order': 20\n  }, {\n    'character': 'Mom at yard sale (voice)',\n    'id': 84493,\n    'name': 'Mickie McGowan',\n    'order': 21\n  }, {\n    'character': 'Airline Rep / sign-off voice / Mr. Konishi (voice)',\n    'id': 61969,\n    'name': 'Phil Proctor',\n    'order': 22\n  }, {\n    'character': \"Red Rock 'Em Sock 'Em Robot (voice)\",\n    'id': 8,\n    'name': 'Lee Unkrich',\n    'order': 23\n  }],\n  id: 863\n}];\nvar _default = credits;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWRpdHMuanMiXSwibmFtZXMiOlsiY3JlZGl0cyIsImNhc3QiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQSxJQUFNQSxPQUFPLEdBQUcsQ0FDWjtBQUNJQyxFQUFBQSxJQUFJLEVBQUUsQ0FBQztBQUFDLGlCQUFhLGVBQWQ7QUFBK0IsVUFBTSxFQUFyQztBQUF5QyxZQUFRLFdBQWpEO0FBQThELGFBQVM7QUFBdkUsR0FBRCxFQUE0RTtBQUFDLGlCQUFhLHdCQUFkO0FBQXdDLFVBQU0sS0FBOUM7QUFBcUQsWUFBUSxXQUE3RDtBQUEwRSxhQUFTO0FBQW5GLEdBQTVFLEVBQW1LO0FBQUMsaUJBQWEseUJBQWQ7QUFBeUMsVUFBTSxJQUEvQztBQUFxRCxZQUFRLGFBQTdEO0FBQTRFLGFBQVM7QUFBckYsR0FBbkssRUFBNFA7QUFBQyxpQkFBYSxvQkFBZDtBQUFvQyxVQUFNLEtBQTFDO0FBQWlELFlBQVEsWUFBekQ7QUFBdUUsYUFBUztBQUFoRixHQUE1UCxFQUFnVjtBQUFDLGlCQUFhLGFBQWQ7QUFBNkIsVUFBTSxLQUFuQztBQUEwQyxZQUFRLGVBQWxEO0FBQW1FLGFBQVM7QUFBNUUsR0FBaFYsRUFBZ2E7QUFBQyxpQkFBYSxjQUFkO0FBQThCLFVBQU0sSUFBcEM7QUFBMEMsWUFBUSxtQkFBbEQ7QUFBdUUsYUFBUztBQUFoRixHQUFoYSxFQUFvZjtBQUFDLGlCQUFhLGlCQUFkO0FBQWlDLFVBQU0sSUFBdkM7QUFBNkMsWUFBUSxhQUFyRDtBQUFvRSxhQUFTO0FBQTdFLEdBQXBmLEVBQXFrQjtBQUFDLGlCQUFhLGNBQWQ7QUFBOEIsVUFBTSxPQUFwQztBQUE2QyxZQUFRLGFBQXJEO0FBQW9FLGFBQVM7QUFBN0UsR0FBcmtCLEVBQXNwQjtBQUFDLGlCQUFhLGFBQWQ7QUFBNkIsVUFBTSxLQUFuQztBQUEwQyxZQUFRLGlCQUFsRDtBQUFxRSxhQUFTO0FBQTlFLEdBQXRwQixFQUF3dUI7QUFBQyxpQkFBYSxvQkFBZDtBQUFvQyxVQUFNLEtBQTFDO0FBQWlELFlBQVEsZ0JBQXpEO0FBQTJFLGFBQVM7QUFBcEYsR0FBeHVCLEVBQWcwQjtBQUFDLGlCQUFhLGtCQUFkO0FBQWtDLFVBQU0sSUFBeEM7QUFBOEMsWUFBUSxjQUF0RDtBQUFzRSxhQUFTO0FBQS9FLEdBQWgwQixFQUFvNUI7QUFBQyxpQkFBYSxnQkFBZDtBQUFnQyxVQUFNLEtBQXRDO0FBQTZDLFlBQVEsZUFBckQ7QUFBc0UsYUFBUztBQUEvRSxHQUFwNUIsRUFBdytCO0FBQUMsaUJBQWEsc0JBQWQ7QUFBc0MsVUFBTSxLQUE1QztBQUFtRCxZQUFRLGVBQTNEO0FBQTRFLGFBQVM7QUFBckYsR0FBeCtCLENBRFY7QUFFSUMsRUFBQUEsRUFBRSxFQUFFO0FBRlIsQ0FEWSxFQUtaO0FBQ0lELEVBQUFBLElBQUksRUFBRSxDQUFDO0FBQUMsaUJBQWEsY0FBZDtBQUE4QixVQUFNLElBQXBDO0FBQTBDLFlBQVEsdUJBQWxEO0FBQTJFLGFBQVM7QUFBcEYsR0FBRCxFQUF5RjtBQUFDLGlCQUFhLE9BQWQ7QUFBdUIsVUFBTSxJQUE3QjtBQUFtQyxZQUFRLGVBQTNDO0FBQTRELGFBQVM7QUFBckUsR0FBekYsRUFBa0s7QUFBQyxpQkFBYSxlQUFkO0FBQStCLFVBQU0sSUFBckM7QUFBMkMsWUFBUSxjQUFuRDtBQUFtRSxhQUFTO0FBQTVFLEdBQWxLLEVBQWtQO0FBQUMsaUJBQWEsZ0JBQWQ7QUFBZ0MsVUFBTSxLQUF0QztBQUE2QyxZQUFRLGNBQXJEO0FBQXFFLGFBQVM7QUFBOUUsR0FBbFAsRUFBb1U7QUFBQyxpQkFBYSwwQkFBZDtBQUEwQyxVQUFNLEtBQWhEO0FBQXVELFlBQVEsYUFBL0Q7QUFBOEUsYUFBUztBQUF2RixHQUFwVSxFQUErWjtBQUFDLGlCQUFhLGNBQWQ7QUFBOEIsVUFBTSxHQUFwQztBQUF5QyxZQUFRLGFBQWpEO0FBQWdFLGFBQVM7QUFBekUsR0FBL1osRUFBNGU7QUFBQyxpQkFBYSxnQkFBZDtBQUFnQyxVQUFNLEtBQXRDO0FBQTZDLFlBQVEsa0JBQXJEO0FBQXlFLGFBQVM7QUFBbEYsR0FBNWUsRUFBa2tCO0FBQUMsaUJBQWEsT0FBZDtBQUF1QixVQUFNLElBQTdCO0FBQW1DLFlBQVEsa0JBQTNDO0FBQStELGFBQVM7QUFBeEUsR0FBbGtCLEVBQThvQjtBQUFDLGlCQUFhLGFBQWQ7QUFBNkIsVUFBTSxJQUFuQztBQUF5QyxZQUFRLFVBQWpEO0FBQTZELGFBQVM7QUFBdEUsR0FBOW9CLEVBQXd0QjtBQUFDLGlCQUFhLE1BQWQ7QUFBc0IsVUFBTSxJQUE1QjtBQUFrQyxZQUFRLGVBQTFDO0FBQTJELGFBQVM7QUFBcEUsR0FBeHRCLEVBQWd5QjtBQUFDLGlCQUFhLGNBQWQ7QUFBOEIsVUFBTSxPQUFwQztBQUE2QyxZQUFRLGNBQXJEO0FBQXFFLGFBQVM7QUFBOUUsR0FBaHlCLEVBQW0zQjtBQUFDLGlCQUFhLFFBQWQ7QUFBd0IsVUFBTSxNQUE5QjtBQUFzQyxZQUFRLGdCQUE5QztBQUFnRSxhQUFTO0FBQXpFLEdBQW4zQixFQUFpOEI7QUFBQyxpQkFBYSxVQUFkO0FBQTBCLFVBQU0sS0FBaEM7QUFBdUMsWUFBUSxpQkFBL0M7QUFBa0UsYUFBUztBQUEzRSxHQUFqOEIsQ0FEVjtBQUVJQyxFQUFBQSxFQUFFLEVBQUU7QUFGUixDQUxZLEVBU1o7QUFDSUQsRUFBQUEsSUFBSSxFQUFFLENBQUM7QUFBQyxpQkFBYSxlQUFkO0FBQStCLFVBQU0sRUFBckM7QUFBeUMsWUFBUSxXQUFqRDtBQUE4RCxhQUFTO0FBQXZFLEdBQUQsRUFBNEU7QUFBQyxpQkFBYSx3QkFBZDtBQUF3QyxVQUFNLEtBQTlDO0FBQXFELFlBQVEsV0FBN0Q7QUFBMEUsYUFBUztBQUFuRixHQUE1RSxFQUFtSztBQUFDLGlCQUFhLGdCQUFkO0FBQWdDLFVBQU0sSUFBdEM7QUFBNEMsWUFBUSxhQUFwRDtBQUFtRSxhQUFTO0FBQTVFLEdBQW5LLEVBQW1QO0FBQUMsaUJBQWEsb0JBQWQ7QUFBb0MsVUFBTSxJQUExQztBQUFnRCxZQUFRLGdCQUF4RDtBQUEwRSxhQUFTO0FBQW5GLEdBQW5QLEVBQTBVO0FBQUMsaUJBQWEseUJBQWQ7QUFBeUMsVUFBTSxJQUEvQztBQUFxRCxZQUFRLGFBQTdEO0FBQTRFLGFBQVM7QUFBckYsR0FBMVUsRUFBbWE7QUFBQyxpQkFBYSxvQkFBZDtBQUFvQyxVQUFNLEtBQTFDO0FBQWlELFlBQVEsWUFBekQ7QUFBdUUsYUFBUztBQUFoRixHQUFuYSxFQUF1ZjtBQUFDLGlCQUFhLGFBQWQ7QUFBNkIsVUFBTSxLQUFuQztBQUEwQyxZQUFRLGVBQWxEO0FBQW1FLGFBQVM7QUFBNUUsR0FBdmYsRUFBdWtCO0FBQUMsaUJBQWEsY0FBZDtBQUE4QixVQUFNLElBQXBDO0FBQTBDLFlBQVEsbUJBQWxEO0FBQXVFLGFBQVM7QUFBaEYsR0FBdmtCLEVBQTJwQjtBQUFDLGlCQUFhLGlCQUFkO0FBQWlDLFVBQU0sSUFBdkM7QUFBNkMsWUFBUSxhQUFyRDtBQUFvRSxhQUFTO0FBQTdFLEdBQTNwQixFQUE0dUI7QUFBQyxpQkFBYSxzQkFBZDtBQUFzQyxVQUFNLElBQTVDO0FBQWtELFlBQVEsY0FBMUQ7QUFBMEUsYUFBUztBQUFuRixHQUE1dUIsRUFBbTBCO0FBQUMsaUJBQWEsY0FBZDtBQUE4QixVQUFNLE9BQXBDO0FBQTZDLFlBQVEsYUFBckQ7QUFBb0UsYUFBUztBQUE3RSxHQUFuMEIsRUFBcTVCO0FBQUMsaUJBQWEsb0JBQWQ7QUFBb0MsVUFBTSxLQUExQztBQUFpRCxZQUFRLGdCQUF6RDtBQUEyRSxhQUFTO0FBQXBGLEdBQXI1QixFQUE4K0I7QUFBQyxpQkFBYSwwQkFBZDtBQUEwQyxVQUFNLEtBQWhEO0FBQXVELFlBQVEsZ0JBQS9EO0FBQWlGLGFBQVM7QUFBMUYsR0FBOStCLEVBQTZrQztBQUFDLGlCQUFhLGVBQWQ7QUFBK0IsVUFBTSxJQUFyQztBQUEyQyxZQUFRLGNBQW5EO0FBQW1FLGFBQVM7QUFBNUUsR0FBN2tDLEVBQThwQztBQUFDLGlCQUFhLGdCQUFkO0FBQWdDLFVBQU0sS0FBdEM7QUFBNkMsWUFBUSxhQUFyRDtBQUFvRSxhQUFTO0FBQTdFLEdBQTlwQyxFQUFndkM7QUFBQyxpQkFBYSxxQkFBZDtBQUFxQyxVQUFNLE1BQTNDO0FBQW1ELFlBQVEsaUJBQTNEO0FBQThFLGFBQVM7QUFBdkYsR0FBaHZDLEVBQTQwQztBQUFDLGlCQUFhLGdCQUFkO0FBQWdDLFVBQU0sSUFBdEM7QUFBNEMsWUFBUSxXQUFwRDtBQUFpRSxhQUFTO0FBQTFFLEdBQTUwQyxFQUEyNUM7QUFBQyxpQkFBYSxzQkFBZDtBQUFzQyxVQUFNLENBQTVDO0FBQStDLFlBQVEsZ0JBQXZEO0FBQXlFLGFBQVM7QUFBbEYsR0FBMzVDLEVBQWsvQztBQUFDLGlCQUFhLGdCQUFkO0FBQWdDLFVBQU0sSUFBdEM7QUFBNEMsWUFBUSxjQUFwRDtBQUFvRSxhQUFTO0FBQTdFLEdBQWwvQyxFQUFva0Q7QUFBQyxpQkFBYSxtQ0FBZDtBQUFtRCxVQUFNLEtBQXpEO0FBQWdFLFlBQVEsY0FBeEU7QUFBd0YsYUFBUztBQUFqRyxHQUFwa0QsRUFBMHFEO0FBQUMsaUJBQWEsc0NBQWQ7QUFBc0QsVUFBTSxJQUE1RDtBQUFrRSxZQUFRLGVBQTFFO0FBQTJGLGFBQVM7QUFBcEcsR0FBMXFELEVBQW14RDtBQUFDLGlCQUFhLDBCQUFkO0FBQTBDLFVBQU0sS0FBaEQ7QUFBdUQsWUFBUSxnQkFBL0Q7QUFBaUYsYUFBUztBQUExRixHQUFueEQsRUFBazNEO0FBQUMsaUJBQWEsb0RBQWQ7QUFBb0UsVUFBTSxLQUExRTtBQUFpRixZQUFRLGNBQXpGO0FBQXlHLGFBQVM7QUFBbEgsR0FBbDNELEVBQXkrRDtBQUFDLGlCQUFhLHFDQUFkO0FBQXFELFVBQU0sQ0FBM0Q7QUFBOEQsWUFBUSxhQUF0RTtBQUFxRixhQUFTO0FBQTlGLEdBQXorRCxDQURWO0FBRUlDLEVBQUFBLEVBQUUsRUFBRTtBQUZSLENBVFksQ0FBaEI7ZUFlZUYsTyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbmF0aGFsaWVodXluaC9Db2RlL0ludGVydmlld3MvbW92aWVuZXQvc3JjL3NlcnZlci9zZXJ2aWNlcy9kYXRhc3RvcmUiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYW5kIHJlZHVjZWQgZGF0YSBmb3IgZGV2ZWxvcG1lbnRcbmNvbnN0IGNyZWRpdHMgPSBbXG4gICAge1xuICAgICAgICBjYXN0OiBbeydjaGFyYWN0ZXInOiAnV29vZHkgKHZvaWNlKScsICdpZCc6IDMxLCAnbmFtZSc6ICdUb20gSGFua3MnLCAnb3JkZXInOiAwfSwgeydjaGFyYWN0ZXInOiAnQnV6eiBMaWdodHllYXIgKHZvaWNlKScsICdpZCc6IDEyODk4LCAnbmFtZSc6ICdUaW0gQWxsZW4nLCAnb3JkZXInOiAxfSwgeydjaGFyYWN0ZXInOiAnTXIuIFBvdGF0byBIZWFkICh2b2ljZSknLCAnaWQnOiA3MTY3LCAnbmFtZSc6ICdEb24gUmlja2xlcycsICdvcmRlcic6IDJ9LCB7J2NoYXJhY3Rlcic6ICdTbGlua3kgRG9nICh2b2ljZSknLCAnaWQnOiAxMjg5OSwgJ25hbWUnOiAnSmltIFZhcm5leScsICdvcmRlcic6IDN9LCB7J2NoYXJhY3Rlcic6ICdSZXggKHZvaWNlKScsICdpZCc6IDEyOTAwLCAnbmFtZSc6ICdXYWxsYWNlIFNoYXduJywgJ29yZGVyJzogNH0sIHsnY2hhcmFjdGVyJzogJ0hhbW0gKHZvaWNlKScsICdpZCc6IDc5MDcsICduYW1lJzogJ0pvaG4gUmF0emVuYmVyZ2VyJywgJ29yZGVyJzogNX0sIHsnY2hhcmFjdGVyJzogJ0JvIFBlZXAgKHZvaWNlKScsICdpZCc6IDg4NzMsICduYW1lJzogJ0FubmllIFBvdHRzJywgJ29yZGVyJzogNn0sIHsnY2hhcmFjdGVyJzogJ0FuZHkgKHZvaWNlKScsICdpZCc6IDExMTY0NDIsICduYW1lJzogJ0pvaG4gTW9ycmlzJywgJ29yZGVyJzogN30sIHsnY2hhcmFjdGVyJzogJ1NpZCAodm9pY2UpJywgJ2lkJzogMTI5MDEsICduYW1lJzogJ0VyaWsgdm9uIERldHRlbicsICdvcmRlcic6IDh9LCB7J2NoYXJhY3Rlcic6ICdNcnMuIERhdmlzICh2b2ljZSknLCAnaWQnOiAxMjEzMywgJ25hbWUnOiAnTGF1cmllIE1ldGNhbGYnLCAnb3JkZXInOiA5fSwgeydjaGFyYWN0ZXInOiAnU2VyZ2VhbnQgKHZvaWNlKScsICdpZCc6IDg2NTUsICduYW1lJzogJ1IuIExlZSBFcm1leScsICdvcmRlcic6IDEwfSwgeydjaGFyYWN0ZXInOiAnSGFubmFoICh2b2ljZSknLCAnaWQnOiAxMjkwMywgJ25hbWUnOiAnU2FyYWggRnJlZW1hbicsICdvcmRlcic6IDExfSwgeydjaGFyYWN0ZXInOiAnVFYgQW5ub3VuY2VyICh2b2ljZSknLCAnaWQnOiAzNzIyMSwgJ25hbWUnOiAnUGVubiBKaWxsZXR0ZScsICdvcmRlcic6IDEyfV0sXG4gICAgICAgIGlkOiA4NjIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNhc3Q6IFt7J2NoYXJhY3Rlcic6ICdKZXJpY2hvIENhbmUnLCAnaWQnOiAxMTAwLCAnbmFtZSc6ICdBcm5vbGQgU2Nod2FyemVuZWdnZXInLCAnb3JkZXInOiAwfSwgeydjaGFyYWN0ZXInOiAnU2F0YW4nLCAnaWQnOiA1MTY4LCAnbmFtZSc6ICdHYWJyaWVsIEJ5cm5lJywgJ29yZGVyJzogMX0sIHsnY2hhcmFjdGVyJzogJ0JvYmJ5IENoaWNhZ28nLCAnaWQnOiA3MTY2LCAnbmFtZSc6ICdLZXZpbiBQb2xsYWsnLCAnb3JkZXInOiAyfSwgeydjaGFyYWN0ZXInOiAnQ2hyaXN0aW5lIFlvcmsnLCAnaWQnOiAxNzM0NiwgJ25hbWUnOiAnUm9iaW4gVHVubmV5JywgJ29yZGVyJzogM30sIHsnY2hhcmFjdGVyJzogJ0RldGVjdGl2ZSBNYXJnaWUgRnJhbmNpcycsICdpZCc6IDMwNDg1LCAnbmFtZSc6ICdDQ0ggUG91bmRlcicsICdvcmRlcic6IDR9LCB7J2NoYXJhY3Rlcic6ICdGYXRoZXIgS292YWsnLCAnaWQnOiA1MjIsICduYW1lJzogJ1JvZCBTdGVpZ2VyJywgJ29yZGVyJzogNX0sIHsnY2hhcmFjdGVyJzogJ1Rob21hcyBBcXVpbmFzJywgJ2lkJzogMTQzMjUsICduYW1lJzogXCJEZXJyaWNrIE8nQ29ubm9yXCIsICdvcmRlcic6IDZ9LCB7J2NoYXJhY3Rlcic6ICdNYWJlbCcsICdpZCc6IDYxOTksICduYW1lJzogJ01pcmlhbSBNYXJnb2x5ZXMnLCAnb3JkZXInOiA3fSwgeydjaGFyYWN0ZXInOiAnSGVhZCBQcmllc3QnLCAnaWQnOiAxNjQ2LCAnbmFtZSc6ICdVZG8gS2llcicsICdvcmRlcic6IDh9LCB7J2NoYXJhY3Rlcic6ICdQb3BlJywgJ2lkJzogMTE3MywgJ25hbWUnOiAnTWFyayBNYXJnb2xpcycsICdvcmRlcic6IDl9LCB7J2NoYXJhY3Rlcic6ICdTa2F0ZWJvYXJkZXInLCAnaWQnOiAxNTcwMzY3LCAnbmFtZSc6ICdKb25ueSBCb2dyaXMnLCAnb3JkZXInOiAxMH0sIHsnY2hhcmFjdGVyJzogJ0FsYmlubycsICdpZCc6IDIxNTMwNCwgJ25hbWUnOiAnVmljdG9yIFZhcm5hZG8nLCAnb3JkZXInOiAxMX0sIHsnY2hhcmFjdGVyJzogJ0NhcmRpbmFsJywgJ2lkJzogNTM0OTAsICduYW1lJzogXCJNaWNoYWVsIE8nSGFnYW5cIiwgJ29yZGVyJzogMTJ9XSxcbiAgICAgICAgaWQ6IDk5NDYsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNhc3Q6IFt7J2NoYXJhY3Rlcic6ICdXb29keSAodm9pY2UpJywgJ2lkJzogMzEsICduYW1lJzogJ1RvbSBIYW5rcycsICdvcmRlcic6IDB9LCB7J2NoYXJhY3Rlcic6ICdCdXp6IExpZ2h0eWVhciAodm9pY2UpJywgJ2lkJzogMTI4OTgsICduYW1lJzogJ1RpbSBBbGxlbicsICdvcmRlcic6IDF9LCB7J2NoYXJhY3Rlcic6ICdKZXNzaWUgKHZvaWNlKScsICdpZCc6IDMyMzQsICduYW1lJzogJ0pvYW4gQ3VzYWNrJywgJ29yZGVyJzogMn0sIHsnY2hhcmFjdGVyJzogJ1Byb3NwZWN0b3IgKHZvaWNlKScsICdpZCc6IDcwOTAsICduYW1lJzogJ0tlbHNleSBHcmFtbWVyJywgJ29yZGVyJzogM30sIHsnY2hhcmFjdGVyJzogJ01yLiBQb3RhdG8gSGVhZCAodm9pY2UpJywgJ2lkJzogNzE2NywgJ25hbWUnOiAnRG9uIFJpY2tsZXMnLCAnb3JkZXInOiA0fSwgeydjaGFyYWN0ZXInOiAnU2xpbmt5IERvZyAodm9pY2UpJywgJ2lkJzogMTI4OTksICduYW1lJzogJ0ppbSBWYXJuZXknLCAnb3JkZXInOiA1fSwgeydjaGFyYWN0ZXInOiAnUmV4ICh2b2ljZSknLCAnaWQnOiAxMjkwMCwgJ25hbWUnOiAnV2FsbGFjZSBTaGF3bicsICdvcmRlcic6IDZ9LCB7J2NoYXJhY3Rlcic6ICdIYW1tICh2b2ljZSknLCAnaWQnOiA3OTA3LCAnbmFtZSc6ICdKb2huIFJhdHplbmJlcmdlcicsICdvcmRlcic6IDd9LCB7J2NoYXJhY3Rlcic6ICdCbyBQZWVwICh2b2ljZSknLCAnaWQnOiA4ODczLCAnbmFtZSc6ICdBbm5pZSBQb3R0cycsICdvcmRlcic6IDh9LCB7J2NoYXJhY3Rlcic6ICdBbCBNY1doaWdnaW4gKHZvaWNlKScsICdpZCc6IDQyMDEsICduYW1lJzogJ1dheW5lIEtuaWdodCcsICdvcmRlcic6IDl9LCB7J2NoYXJhY3Rlcic6ICdBbmR5ICh2b2ljZSknLCAnaWQnOiAxMTE2NDQyLCAnbmFtZSc6ICdKb2huIE1vcnJpcycsICdvcmRlcic6IDEwfSwgeydjaGFyYWN0ZXInOiBcIkFuZHkncyBNb20gKHZvaWNlKVwiLCAnaWQnOiAxMjEzMywgJ25hbWUnOiAnTGF1cmllIE1ldGNhbGYnLCAnb3JkZXInOiAxMX0sIHsnY2hhcmFjdGVyJzogJ01ycy4gUG90YXRvIEhlYWQgKHZvaWNlKScsICdpZCc6IDYxOTY0LCAnbmFtZSc6ICdFc3RlbGxlIEhhcnJpcycsICdvcmRlcic6IDEyfSwgeydjaGFyYWN0ZXInOiAnU2FyZ2UgKHZvaWNlKScsICdpZCc6IDg2NTUsICduYW1lJzogJ1IuIExlZSBFcm1leScsICdvcmRlcic6IDEzfSwgeydjaGFyYWN0ZXInOiAnQmFyYmllICh2b2ljZSknLCAnaWQnOiA2Mzk3OCwgJ25hbWUnOiAnSm9kaSBCZW5zb24nLCAnb3JkZXInOiAxNH0sIHsnY2hhcmFjdGVyJzogJ1RoZSBDbGVhbmVyICh2b2ljZSknLCAnaWQnOiAxMjMwMzcsICduYW1lJzogJ0pvbmF0aGFuIEhhcnJpcycsICdvcmRlcic6IDE1fSwgeydjaGFyYWN0ZXInOiAnV2hlZXp5ICh2b2ljZSknLCAnaWQnOiA3OTExLCAnbmFtZSc6ICdKb2UgUmFuZnQnLCAnb3JkZXInOiAxNn0sIHsnY2hhcmFjdGVyJzogJ0VtcGVyb3IgWnVyZyAodm9pY2UpJywgJ2lkJzogNywgJ25hbWUnOiAnQW5kcmV3IFN0YW50b24nLCAnb3JkZXInOiAxN30sIHsnY2hhcmFjdGVyJzogJ0FsaWVucyAodm9pY2UpJywgJ2lkJzogNzg4MiwgJ25hbWUnOiAnSmVmZiBQaWRnZW9uJywgJ29yZGVyJzogMTh9LCB7J2NoYXJhY3Rlcic6IFwiV29vZHkncyBSb3VuZHVwIEFubm91bmNlciAodm9pY2UpXCIsICdpZCc6IDM1MjE5LCAnbmFtZSc6ICdDb3JleSBCdXJ0b24nLCAnb3JkZXInOiAxOX0sIHsnY2hhcmFjdGVyJzogXCJCbHVlIFJvY2sgJ0VtIFNvY2sgJ0VtIFJvYm90ICh2b2ljZSlcIiwgJ2lkJzogNzg3OSwgJ25hbWUnOiAnSm9obiBMYXNzZXRlcicsICdvcmRlcic6IDIwfSwgeydjaGFyYWN0ZXInOiAnTW9tIGF0IHlhcmQgc2FsZSAodm9pY2UpJywgJ2lkJzogODQ0OTMsICduYW1lJzogJ01pY2tpZSBNY0dvd2FuJywgJ29yZGVyJzogMjF9LCB7J2NoYXJhY3Rlcic6ICdBaXJsaW5lIFJlcCAvIHNpZ24tb2ZmIHZvaWNlIC8gTXIuIEtvbmlzaGkgKHZvaWNlKScsICdpZCc6IDYxOTY5LCAnbmFtZSc6ICdQaGlsIFByb2N0b3InLCAnb3JkZXInOiAyMn0sIHsnY2hhcmFjdGVyJzogXCJSZWQgUm9jayAnRW0gU29jayAnRW0gUm9ib3QgKHZvaWNlKVwiLCAnaWQnOiA4LCAnbmFtZSc6ICdMZWUgVW5rcmljaCcsICdvcmRlcic6IDIzfV0sXG4gICAgICAgIGlkOiA4NjMsXG4gICAgfVxuXTtcblxuZXhwb3J0IGRlZmF1bHQgY3JlZGl0czsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "credits.js"
      ],
      "names": [
        "credits",
        "cast",
        "id"
      ],
      "mappings": ";;;;;;AAAA;AACA,IAAMA,OAAO,GAAG,CACZ;AACIC,EAAAA,IAAI,EAAE,CAAC;AAAC,iBAAa,eAAd;AAA+B,UAAM,EAArC;AAAyC,YAAQ,WAAjD;AAA8D,aAAS;AAAvE,GAAD,EAA4E;AAAC,iBAAa,wBAAd;AAAwC,UAAM,KAA9C;AAAqD,YAAQ,WAA7D;AAA0E,aAAS;AAAnF,GAA5E,EAAmK;AAAC,iBAAa,yBAAd;AAAyC,UAAM,IAA/C;AAAqD,YAAQ,aAA7D;AAA4E,aAAS;AAArF,GAAnK,EAA4P;AAAC,iBAAa,oBAAd;AAAoC,UAAM,KAA1C;AAAiD,YAAQ,YAAzD;AAAuE,aAAS;AAAhF,GAA5P,EAAgV;AAAC,iBAAa,aAAd;AAA6B,UAAM,KAAnC;AAA0C,YAAQ,eAAlD;AAAmE,aAAS;AAA5E,GAAhV,EAAga;AAAC,iBAAa,cAAd;AAA8B,UAAM,IAApC;AAA0C,YAAQ,mBAAlD;AAAuE,aAAS;AAAhF,GAAha,EAAof;AAAC,iBAAa,iBAAd;AAAiC,UAAM,IAAvC;AAA6C,YAAQ,aAArD;AAAoE,aAAS;AAA7E,GAApf,EAAqkB;AAAC,iBAAa,cAAd;AAA8B,UAAM,OAApC;AAA6C,YAAQ,aAArD;AAAoE,aAAS;AAA7E,GAArkB,EAAspB;AAAC,iBAAa,aAAd;AAA6B,UAAM,KAAnC;AAA0C,YAAQ,iBAAlD;AAAqE,aAAS;AAA9E,GAAtpB,EAAwuB;AAAC,iBAAa,oBAAd;AAAoC,UAAM,KAA1C;AAAiD,YAAQ,gBAAzD;AAA2E,aAAS;AAApF,GAAxuB,EAAg0B;AAAC,iBAAa,kBAAd;AAAkC,UAAM,IAAxC;AAA8C,YAAQ,cAAtD;AAAsE,aAAS;AAA/E,GAAh0B,EAAo5B;AAAC,iBAAa,gBAAd;AAAgC,UAAM,KAAtC;AAA6C,YAAQ,eAArD;AAAsE,aAAS;AAA/E,GAAp5B,EAAw+B;AAAC,iBAAa,sBAAd;AAAsC,UAAM,KAA5C;AAAmD,YAAQ,eAA3D;AAA4E,aAAS;AAArF,GAAx+B,CADV;AAEIC,EAAAA,EAAE,EAAE;AAFR,CADY,EAKZ;AACID,EAAAA,IAAI,EAAE,CAAC;AAAC,iBAAa,cAAd;AAA8B,UAAM,IAApC;AAA0C,YAAQ,uBAAlD;AAA2E,aAAS;AAApF,GAAD,EAAyF;AAAC,iBAAa,OAAd;AAAuB,UAAM,IAA7B;AAAmC,YAAQ,eAA3C;AAA4D,aAAS;AAArE,GAAzF,EAAkK;AAAC,iBAAa,eAAd;AAA+B,UAAM,IAArC;AAA2C,YAAQ,cAAnD;AAAmE,aAAS;AAA5E,GAAlK,EAAkP;AAAC,iBAAa,gBAAd;AAAgC,UAAM,KAAtC;AAA6C,YAAQ,cAArD;AAAqE,aAAS;AAA9E,GAAlP,EAAoU;AAAC,iBAAa,0BAAd;AAA0C,UAAM,KAAhD;AAAuD,YAAQ,aAA/D;AAA8E,aAAS;AAAvF,GAApU,EAA+Z;AAAC,iBAAa,cAAd;AAA8B,UAAM,GAApC;AAAyC,YAAQ,aAAjD;AAAgE,aAAS;AAAzE,GAA/Z,EAA4e;AAAC,iBAAa,gBAAd;AAAgC,UAAM,KAAtC;AAA6C,YAAQ,kBAArD;AAAyE,aAAS;AAAlF,GAA5e,EAAkkB;AAAC,iBAAa,OAAd;AAAuB,UAAM,IAA7B;AAAmC,YAAQ,kBAA3C;AAA+D,aAAS;AAAxE,GAAlkB,EAA8oB;AAAC,iBAAa,aAAd;AAA6B,UAAM,IAAnC;AAAyC,YAAQ,UAAjD;AAA6D,aAAS;AAAtE,GAA9oB,EAAwtB;AAAC,iBAAa,MAAd;AAAsB,UAAM,IAA5B;AAAkC,YAAQ,eAA1C;AAA2D,aAAS;AAApE,GAAxtB,EAAgyB;AAAC,iBAAa,cAAd;AAA8B,UAAM,OAApC;AAA6C,YAAQ,cAArD;AAAqE,aAAS;AAA9E,GAAhyB,EAAm3B;AAAC,iBAAa,QAAd;AAAwB,UAAM,MAA9B;AAAsC,YAAQ,gBAA9C;AAAgE,aAAS;AAAzE,GAAn3B,EAAi8B;AAAC,iBAAa,UAAd;AAA0B,UAAM,KAAhC;AAAuC,YAAQ,iBAA/C;AAAkE,aAAS;AAA3E,GAAj8B,CADV;AAEIC,EAAAA,EAAE,EAAE;AAFR,CALY,EASZ;AACID,EAAAA,IAAI,EAAE,CAAC;AAAC,iBAAa,eAAd;AAA+B,UAAM,EAArC;AAAyC,YAAQ,WAAjD;AAA8D,aAAS;AAAvE,GAAD,EAA4E;AAAC,iBAAa,wBAAd;AAAwC,UAAM,KAA9C;AAAqD,YAAQ,WAA7D;AAA0E,aAAS;AAAnF,GAA5E,EAAmK;AAAC,iBAAa,gBAAd;AAAgC,UAAM,IAAtC;AAA4C,YAAQ,aAApD;AAAmE,aAAS;AAA5E,GAAnK,EAAmP;AAAC,iBAAa,oBAAd;AAAoC,UAAM,IAA1C;AAAgD,YAAQ,gBAAxD;AAA0E,aAAS;AAAnF,GAAnP,EAA0U;AAAC,iBAAa,yBAAd;AAAyC,UAAM,IAA/C;AAAqD,YAAQ,aAA7D;AAA4E,aAAS;AAArF,GAA1U,EAAma;AAAC,iBAAa,oBAAd;AAAoC,UAAM,KAA1C;AAAiD,YAAQ,YAAzD;AAAuE,aAAS;AAAhF,GAAna,EAAuf;AAAC,iBAAa,aAAd;AAA6B,UAAM,KAAnC;AAA0C,YAAQ,eAAlD;AAAmE,aAAS;AAA5E,GAAvf,EAAukB;AAAC,iBAAa,cAAd;AAA8B,UAAM,IAApC;AAA0C,YAAQ,mBAAlD;AAAuE,aAAS;AAAhF,GAAvkB,EAA2pB;AAAC,iBAAa,iBAAd;AAAiC,UAAM,IAAvC;AAA6C,YAAQ,aAArD;AAAoE,aAAS;AAA7E,GAA3pB,EAA4uB;AAAC,iBAAa,sBAAd;AAAsC,UAAM,IAA5C;AAAkD,YAAQ,cAA1D;AAA0E,aAAS;AAAnF,GAA5uB,EAAm0B;AAAC,iBAAa,cAAd;AAA8B,UAAM,OAApC;AAA6C,YAAQ,aAArD;AAAoE,aAAS;AAA7E,GAAn0B,EAAq5B;AAAC,iBAAa,oBAAd;AAAoC,UAAM,KAA1C;AAAiD,YAAQ,gBAAzD;AAA2E,aAAS;AAApF,GAAr5B,EAA8+B;AAAC,iBAAa,0BAAd;AAA0C,UAAM,KAAhD;AAAuD,YAAQ,gBAA/D;AAAiF,aAAS;AAA1F,GAA9+B,EAA6kC;AAAC,iBAAa,eAAd;AAA+B,UAAM,IAArC;AAA2C,YAAQ,cAAnD;AAAmE,aAAS;AAA5E,GAA7kC,EAA8pC;AAAC,iBAAa,gBAAd;AAAgC,UAAM,KAAtC;AAA6C,YAAQ,aAArD;AAAoE,aAAS;AAA7E,GAA9pC,EAAgvC;AAAC,iBAAa,qBAAd;AAAqC,UAAM,MAA3C;AAAmD,YAAQ,iBAA3D;AAA8E,aAAS;AAAvF,GAAhvC,EAA40C;AAAC,iBAAa,gBAAd;AAAgC,UAAM,IAAtC;AAA4C,YAAQ,WAApD;AAAiE,aAAS;AAA1E,GAA50C,EAA25C;AAAC,iBAAa,sBAAd;AAAsC,UAAM,CAA5C;AAA+C,YAAQ,gBAAvD;AAAyE,aAAS;AAAlF,GAA35C,EAAk/C;AAAC,iBAAa,gBAAd;AAAgC,UAAM,IAAtC;AAA4C,YAAQ,cAApD;AAAoE,aAAS;AAA7E,GAAl/C,EAAokD;AAAC,iBAAa,mCAAd;AAAmD,UAAM,KAAzD;AAAgE,YAAQ,cAAxE;AAAwF,aAAS;AAAjG,GAApkD,EAA0qD;AAAC,iBAAa,sCAAd;AAAsD,UAAM,IAA5D;AAAkE,YAAQ,eAA1E;AAA2F,aAAS;AAApG,GAA1qD,EAAmxD;AAAC,iBAAa,0BAAd;AAA0C,UAAM,KAAhD;AAAuD,YAAQ,gBAA/D;AAAiF,aAAS;AAA1F,GAAnxD,EAAk3D;AAAC,iBAAa,oDAAd;AAAoE,UAAM,KAA1E;AAAiF,YAAQ,cAAzF;AAAyG,aAAS;AAAlH,GAAl3D,EAAy+D;AAAC,iBAAa,qCAAd;AAAqD,UAAM,CAA3D;AAA8D,YAAQ,aAAtE;AAAqF,aAAS;AAA9F,GAAz+D,CADV;AAEIC,EAAAA,EAAE,EAAE;AAFR,CATY,CAAhB;eAeeF,O",
      "sourceRoot": "/Users/nathaliehuynh/Code/Interviews/movienet/src/server/services/datastore",
      "sourcesContent": [
        "// extracted and reduced data for development\nconst credits = [\n    {\n        cast: [{'character': 'Woody (voice)', 'id': 31, 'name': 'Tom Hanks', 'order': 0}, {'character': 'Buzz Lightyear (voice)', 'id': 12898, 'name': 'Tim Allen', 'order': 1}, {'character': 'Mr. Potato Head (voice)', 'id': 7167, 'name': 'Don Rickles', 'order': 2}, {'character': 'Slinky Dog (voice)', 'id': 12899, 'name': 'Jim Varney', 'order': 3}, {'character': 'Rex (voice)', 'id': 12900, 'name': 'Wallace Shawn', 'order': 4}, {'character': 'Hamm (voice)', 'id': 7907, 'name': 'John Ratzenberger', 'order': 5}, {'character': 'Bo Peep (voice)', 'id': 8873, 'name': 'Annie Potts', 'order': 6}, {'character': 'Andy (voice)', 'id': 1116442, 'name': 'John Morris', 'order': 7}, {'character': 'Sid (voice)', 'id': 12901, 'name': 'Erik von Detten', 'order': 8}, {'character': 'Mrs. Davis (voice)', 'id': 12133, 'name': 'Laurie Metcalf', 'order': 9}, {'character': 'Sergeant (voice)', 'id': 8655, 'name': 'R. Lee Ermey', 'order': 10}, {'character': 'Hannah (voice)', 'id': 12903, 'name': 'Sarah Freeman', 'order': 11}, {'character': 'TV Announcer (voice)', 'id': 37221, 'name': 'Penn Jillette', 'order': 12}],\n        id: 862,\n    },\n    {\n        cast: [{'character': 'Jericho Cane', 'id': 1100, 'name': 'Arnold Schwarzenegger', 'order': 0}, {'character': 'Satan', 'id': 5168, 'name': 'Gabriel Byrne', 'order': 1}, {'character': 'Bobby Chicago', 'id': 7166, 'name': 'Kevin Pollak', 'order': 2}, {'character': 'Christine York', 'id': 17346, 'name': 'Robin Tunney', 'order': 3}, {'character': 'Detective Margie Francis', 'id': 30485, 'name': 'CCH Pounder', 'order': 4}, {'character': 'Father Kovak', 'id': 522, 'name': 'Rod Steiger', 'order': 5}, {'character': 'Thomas Aquinas', 'id': 14325, 'name': \"Derrick O'Connor\", 'order': 6}, {'character': 'Mabel', 'id': 6199, 'name': 'Miriam Margolyes', 'order': 7}, {'character': 'Head Priest', 'id': 1646, 'name': 'Udo Kier', 'order': 8}, {'character': 'Pope', 'id': 1173, 'name': 'Mark Margolis', 'order': 9}, {'character': 'Skateboarder', 'id': 1570367, 'name': 'Jonny Bogris', 'order': 10}, {'character': 'Albino', 'id': 215304, 'name': 'Victor Varnado', 'order': 11}, {'character': 'Cardinal', 'id': 53490, 'name': \"Michael O'Hagan\", 'order': 12}],\n        id: 9946,\n    },\n    {\n        cast: [{'character': 'Woody (voice)', 'id': 31, 'name': 'Tom Hanks', 'order': 0}, {'character': 'Buzz Lightyear (voice)', 'id': 12898, 'name': 'Tim Allen', 'order': 1}, {'character': 'Jessie (voice)', 'id': 3234, 'name': 'Joan Cusack', 'order': 2}, {'character': 'Prospector (voice)', 'id': 7090, 'name': 'Kelsey Grammer', 'order': 3}, {'character': 'Mr. Potato Head (voice)', 'id': 7167, 'name': 'Don Rickles', 'order': 4}, {'character': 'Slinky Dog (voice)', 'id': 12899, 'name': 'Jim Varney', 'order': 5}, {'character': 'Rex (voice)', 'id': 12900, 'name': 'Wallace Shawn', 'order': 6}, {'character': 'Hamm (voice)', 'id': 7907, 'name': 'John Ratzenberger', 'order': 7}, {'character': 'Bo Peep (voice)', 'id': 8873, 'name': 'Annie Potts', 'order': 8}, {'character': 'Al McWhiggin (voice)', 'id': 4201, 'name': 'Wayne Knight', 'order': 9}, {'character': 'Andy (voice)', 'id': 1116442, 'name': 'John Morris', 'order': 10}, {'character': \"Andy's Mom (voice)\", 'id': 12133, 'name': 'Laurie Metcalf', 'order': 11}, {'character': 'Mrs. Potato Head (voice)', 'id': 61964, 'name': 'Estelle Harris', 'order': 12}, {'character': 'Sarge (voice)', 'id': 8655, 'name': 'R. Lee Ermey', 'order': 13}, {'character': 'Barbie (voice)', 'id': 63978, 'name': 'Jodi Benson', 'order': 14}, {'character': 'The Cleaner (voice)', 'id': 123037, 'name': 'Jonathan Harris', 'order': 15}, {'character': 'Wheezy (voice)', 'id': 7911, 'name': 'Joe Ranft', 'order': 16}, {'character': 'Emperor Zurg (voice)', 'id': 7, 'name': 'Andrew Stanton', 'order': 17}, {'character': 'Aliens (voice)', 'id': 7882, 'name': 'Jeff Pidgeon', 'order': 18}, {'character': \"Woody's Roundup Announcer (voice)\", 'id': 35219, 'name': 'Corey Burton', 'order': 19}, {'character': \"Blue Rock 'Em Sock 'Em Robot (voice)\", 'id': 7879, 'name': 'John Lasseter', 'order': 20}, {'character': 'Mom at yard sale (voice)', 'id': 84493, 'name': 'Mickie McGowan', 'order': 21}, {'character': 'Airline Rep / sign-off voice / Mr. Konishi (voice)', 'id': 61969, 'name': 'Phil Proctor', 'order': 22}, {'character': \"Red Rock 'Em Sock 'Em Robot (voice)\", 'id': 8, 'name': 'Lee Unkrich', 'order': 23}],\n        id: 863,\n    }\n];\n\nexport default credits;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570744556124
  }
}